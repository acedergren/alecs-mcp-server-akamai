# Multi-stage build for WebSocket server
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies
RUN npm ci

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:20-alpine

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install production dependencies only
RUN npm ci --production && npm cache clean --force

# Copy built application from builder
COPY --from=builder /app/dist ./dist

# Create directories
RUN mkdir -p data logs

# Use non-root user
USER node

# Expose WebSocket port
EXPOSE 8082

# Health check for WebSocket (using HTTP endpoint if available)
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s \
  CMD node -e "require('http').get('http://localhost:8082/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))" || exit 1

# Set WebSocket transport environment variable
ENV MCP_TRANSPORT=websocket
ENV PORT=8082

CMD ["node", "dist/index.js"]