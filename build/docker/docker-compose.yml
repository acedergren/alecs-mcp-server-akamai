version: '3.8'

services:
  # Production service
  alecs:
    build:
      context: ../..
      dockerfile: build/docker/Dockerfile
    image: alecs-mcp-server-akamai:1.3.3
    container_name: alecs-mcp
    restart: unless-stopped
    environment:
      # Optional: Override edgerc path
      # EDGERC_PATH: /home/alecs/.akamai/.edgerc
      # Optional: Set default customer
      # DEFAULT_CUSTOMER: production
      # Optional: Enable debug logging
      # DEBUG: "1"
      NODE_ENV: production
    volumes:
      # Mount .edgerc file (required)
      - ~/.edgerc:/home/alecs/.edgerc:ro
      # Optional: Mount custom .edgerc location
      # - ./config/.edgerc:/home/alecs/.akamai/.edgerc:ro
    # For MCP stdio communication
    stdin_open: true
    tty: true
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  # Development service with hot reload
  alecs-dev:
    build:
      context: ../..
      dockerfile: build/docker/Dockerfile.dev
    image: alecs-mcp-server-akamai:dev-1.3.3
    container_name: alecs-mcp-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      # Enable TypeScript debugging
      NODE_OPTIONS: "--inspect=0.0.0.0:9229 --enable-source-maps"
      # EDGERC_PATH: /home/node/.edgerc
      # DEBUG: "1"
    volumes:
      # Mount source code for hot reload
      - ../../src:/app/src:ro
      - ../../tests:/app/tests:ro
      - ../../examples:/app/examples:ro
      - ../../package.json:/app/package.json:ro
      - ../../tsconfig.json:/app/tsconfig.json:ro
      - ../../tsconfig.build.json:/app/tsconfig.build.json:ro
      # Mount .edgerc file
      - ~/.edgerc:/home/node/.edgerc:ro
      # Mount dist for build output
      - ../../dist:/app/dist
    stdin_open: true
    tty: true
    ports:
      # Expose debugging port
      - "9229:9229"
    command: ["npm", "run", "dev"]

  # Test runner service
  alecs-test:
    build:
      context: ../..
      dockerfile: build/docker/Dockerfile
      target: builder
    image: alecs-mcp-server-akamai:test
    container_name: alecs-mcp-test
    environment:
      NODE_ENV: test
      CI: "true"
      # Jest configuration
      JEST_JUNIT_OUTPUT_DIR: /app/coverage
      JEST_JUNIT_OUTPUT_NAME: junit.xml
    volumes:
      - ../../src:/app/src:ro
      - ../../tests:/app/tests:ro
      - ../../package.json:/app/package.json:ro
      - ../../tsconfig.json:/app/tsconfig.json:ro
      - ../../jest.config.js:/app/jest.config.js:ro
      - ../../coverage:/app/coverage
      - ~/.edgerc:/root/.edgerc:ro
    command: ["npm", "test"]

  # One-shot build service
  alecs-build:
    build:
      context: ../..
      dockerfile: build/docker/Dockerfile
      target: builder
    image: alecs-mcp-server-akamai:builder
    container_name: alecs-mcp-build
    volumes:
      - ../../dist:/app/dist
      - ../../src:/app/src:ro
      - ../../package.json:/app/package.json:ro
      - ../../tsconfig.json:/app/tsconfig.json:ro
      - ../../tsconfig.build.json:/app/tsconfig.build.json:ro
    command: ["npm", "run", "build:strict"]

  # Interactive launcher service
  alecs-interactive:
    build:
      context: ../..
      dockerfile: build/docker/Dockerfile
    image: alecs-mcp-server-akamai:1.3.3
    container_name: alecs-mcp-interactive
    environment:
      NODE_ENV: production
    volumes:
      - ~/.edgerc:/home/alecs/.edgerc:ro
    stdin_open: true
    tty: true
    command: ["node", "dist/interactive-launcher.js"]

  # Individual service containers
  alecs-property:
    extends:
      service: alecs
    container_name: alecs-mcp-property
    command: ["node", "dist/servers/property-server.js"]

  alecs-dns:
    extends:
      service: alecs
    container_name: alecs-mcp-dns
    command: ["node", "dist/servers/dns-server.js"]

  alecs-certs:
    extends:
      service: alecs
    container_name: alecs-mcp-certs
    command: ["node", "dist/servers/certs-server.js"]

  alecs-security:
    extends:
      service: alecs
    container_name: alecs-mcp-security
    command: ["node", "dist/servers/security-server.js"]

  alecs-reporting:
    extends:
      service: alecs
    container_name: alecs-mcp-reporting
    command: ["node", "dist/servers/reporting-server.js"]

# Network configuration
networks:
  default:
    name: alecs-network
    driver: bridge

# Optional: Named volumes for persistent data
volumes:
  alecs-data:
    driver: local
  alecs-coverage:
    driver: local