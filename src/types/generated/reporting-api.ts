/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/reports": {
    /**
     * List report types
     * @description List all versions of all report types, optionally filtering out older deprecated versions.
     */
    get: operations["get-reports"];
  };
  "/reports/{name}/versions": {
    /**
     * List versions
     * @description List all versions for a specific report type.
     */
    get: operations["get-report-versions"];
    parameters: {
      path: {
        /**
         * @description Identifies the type of report.
         * @example {{name}}
         */
        name: string;
      };
    };
  };
  "/reports/{name}/versions/{version}": {
    /**
     * Get a report type
     * @description Get a specific version of a report type.
     */
    get: operations["get-report-version"];
    parameters: {
      path: {
        /**
         * @description The version of the report type.
         * @example {{version}}
         */
        version: number;
        /**
         * @description Identifies the type of report.
         * @example {{name}}
         */
        name: string;
      };
    };
  };
  "/reports/{name}/versions/{version}/report-data": {
    /**
     * Get a cacheable report
     * @description Produce a report in either JSON or CSV format for a specific version of a type of report.  While functionally identical to [Generate a report](https://techdocs.akamai.com/reporting/reference/post-report-version-data), this alternative GET operation specifies all request data as query parameters.
     */
    get: operations["get-report-version-data"];
    /**
     * Generate a report
     * @description Produce a report in either JSON or CSV format for a specific version of a type of report. In CSV data, values with commas or space characters are quoted. Query parameters specify the range of data and the aggregation interval for each record.
     */
    post: operations["post-report-version-data"];
    parameters: {
      path: {
        /**
         * @description The version of the report type.
         * @example {{version}}
         */
        version: number;
        /**
         * @description Identifies the type of report.
         * @example {{name}}
         */
        name: string;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export type components = Record<string, never>;

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * List report types
   * @description List all versions of all report types, optionally filtering out older deprecated versions.
   */
  "get-reports": {
    parameters: {
      query?: {
        /**
         * @description Specifies if deprecated reports should be shown.
         * @example {{showDeprecated}}
         */
        showDeprecated?: boolean;
        /**
         * @description Specifies if unavailable reports should be shown.
         * @example {{showUnavailable}}
         */
        showUnavailable?: boolean;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description Success. */
      200: {
        content: {
          "application/json": ({
              /** @description When enabled, indicates the report can be executed by the current user. */
              available: boolean;
              /** @description The number of days for which this report's data is available. */
              dataRetentionDays: number;
              /** @description When enabled, indicates that this is an older version of the report. */
              deprecated: boolean;
              /** @description The set of available filters available for this report. */
              filters?: ({
                  /** @description Provides documentation describing the available filter. */
                  fullDescription?: string;
                  /** @description The name of the available filter. */
                  name?: string;
                  /** @description When enabled, you need to specify this filter when executing the report. */
                  required?: boolean;
                  /**
                   * @description The type of data this filter expects, either arbitrary `int` or `string`, or a fixed `enum` specified by `values`.
                   * @enum {string}
                   */
                  type?: "string" | "int" | "enum";
                  /** @description When the `type` of filter is `enum`, this lists available values. */
                  values?: {
                      /** @description Where necessary, provides documentation describing the enumerated value. */
                      fullDescription?: string;
                      /** @description Specifies each enumerated string value. */
                      value: string;
                    }[];
                })[];
              /** @description Documentation that describes this report. */
              fullDescription?: string;
              /** @description This indicates names of columns by which reported data is grouped. It's reflected in the generated report's metadata. */
              groupBy?: string[];
              /** @description Specifies this report's support for grouping outlying values under a single category. */
              groupOutlyingValues?: {
                /** @description Indicates whether this report allows you to group outlying values. */
                enabled: boolean;
                /**
                 * @description Indicates the default category name under which outlying values group within a single category. You can provide your own name to override this default.
                 * @default Other
                 */
                groupName?: string;
                /**
                 * @description Indicates the default number of categories to report on separately before grouping under a single category. You can provide your own threshold value to override this default.
                 * @default 9
                 */
                groupThreshold?: number;
              };
              /** @description Specifies the set of available spans of time to aggregate data by. Use one of these values as the `interval` query parameter when executing the report. */
              intervals: string[];
              /** @description The default number of data rows included for this report. */
              limit?: number;
              /** @description Specifies dynamic hypermedia links to report-generating operations. */
              links?: {
                  /** @description The hypermedia URL linking the API resource. */
                  href: string;
                  /**
                   * @description The HTTP method to call the `href` link with. If unspecified, uses the GET method.
                   * @default GET
                   */
                  method?: string;
                  /** @description Identifies the type of resource. */
                  rel: string;
                }[];
              /** @description The maximum number of data rows permitted for this report. */
              maxLimit?: number;
              /** @description The set of available metrics available for this report. */
              metrics?: {
                  /** @description Provides documentation describing the available metric. */
                  fullDescription?: string;
                  /** @description The name of the available metric. */
                  name: string;
                }[];
              /** @description Specifies the name of the report. */
              name: string;
              /**
               * @description The report type. Either `HIERARCHICAL` with two columns you can group data by, with the first being Time, or `FLAT`.
               * @enum {string}
               */
              outputType?: "FLAT" | "HIERARCHICAL";
              /** @description If specified, this lists any product you need to execute the report. */
              requiredProducts?: string[];
              /** @description Information about required role to run this report. */
              requiredRoles: string[];
              /**
               * @description Whether this version of the report is `PUBLISHED` or `DEPRECATED`. Selecting `DEPRECATED` enables the `deprecated` JSON member.
               * @enum {string}
               */
              status: "PUBLISHED" | "DEPRECATED";
              /** @description The version of this report. */
              version: number;
            })[];
        };
      };
    };
  };
  /**
   * List versions
   * @description List all versions for a specific report type.
   */
  "get-report-versions": {
    parameters: {
      query?: {
        /**
         * @description Specifies if deprecated reports should be shown.
         * @example {{showDeprecated}}
         */
        showDeprecated?: boolean;
        /**
         * @description Specifies if unavailable reports should be shown.
         * @example {{showUnavailable}}
         */
        showUnavailable?: boolean;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description Identifies the type of report.
         * @example {{name}}
         */
        name: string;
      };
    };
    responses: {
      /** @description Success. */
      200: {
        content: {
          "application/json": ({
              /** @description When enabled, indicates the report can be executed by the current user. */
              available: boolean;
              /** @description The number of days for which this report's data is available. */
              dataRetentionDays: number;
              /** @description When enabled, indicates that this is an older version of the report. */
              deprecated: boolean;
              /** @description The set of available filters available for this report. */
              filters?: ({
                  /** @description Provides documentation describing the available filter. */
                  fullDescription?: string;
                  /** @description The name of the available filter. */
                  name?: string;
                  /** @description When enabled, you need to specify this filter when executing the report. */
                  required?: boolean;
                  /**
                   * @description The type of data this filter expects, either arbitrary `int` or `string`, or a fixed `enum` specified by `values`.
                   * @enum {string}
                   */
                  type?: "string" | "int" | "enum";
                  /** @description When the `type` of filter is `enum`, this lists available values. */
                  values?: {
                      /** @description Where necessary, provides documentation describing the enumerated value. */
                      fullDescription?: string;
                      /** @description Specifies each enumerated string value. */
                      value: string;
                    }[];
                })[];
              /** @description Documentation that describes this report. */
              fullDescription?: string;
              /** @description This indicates names of columns by which reported data is grouped. It's reflected in the generated report's metadata. */
              groupBy?: string[];
              /** @description Specifies this report's support for grouping outlying values under a single category. */
              groupOutlyingValues?: {
                /** @description Indicates whether this report allows you to group outlying values. */
                enabled: boolean;
                /**
                 * @description Indicates the default category name under which outlying values group within a single category. You can provide your own name to override this default.
                 * @default Other
                 */
                groupName?: string;
                /**
                 * @description Indicates the default number of categories to report on separately before grouping under a single category. You can provide your own threshold value to override this default.
                 * @default 9
                 */
                groupThreshold?: number;
              };
              /** @description Specifies the set of available spans of time to aggregate data by. Use one of these values as the `interval` query parameter when executing the report. */
              intervals: string[];
              /** @description The default number of data rows included for this report. */
              limit?: number;
              /** @description Specifies dynamic hypermedia links to report-generating operations. */
              links?: {
                  /** @description The hypermedia URL linking the API resource. */
                  href: string;
                  /**
                   * @description The HTTP method to call the `href` link with. If unspecified, uses the GET method.
                   * @default GET
                   */
                  method?: string;
                  /** @description Identifies the type of resource. */
                  rel: string;
                }[];
              /** @description The maximum number of data rows permitted for this report. */
              maxLimit?: number;
              /** @description The set of available metrics available for this report. */
              metrics?: {
                  /** @description Provides documentation describing the available metric. */
                  fullDescription?: string;
                  /** @description The name of the available metric. */
                  name: string;
                }[];
              /** @description Specifies the name of the report. */
              name: string;
              /**
               * @description The report type. Either `HIERARCHICAL` with two columns you can group data by, with the first being Time, or `FLAT`.
               * @enum {string}
               */
              outputType?: "FLAT" | "HIERARCHICAL";
              /** @description If specified, this lists any product you need to execute the report. */
              requiredProducts?: string[];
              /** @description Information about required role to run this report. */
              requiredRoles: string[];
              /**
               * @description Whether this version of the report is `PUBLISHED` or `DEPRECATED`. Selecting `DEPRECATED` enables the `deprecated` JSON member.
               * @enum {string}
               */
              status: "PUBLISHED" | "DEPRECATED";
              /** @description The version of this report. */
              version: number;
            })[];
        };
      };
    };
  };
  /**
   * Get a report type
   * @description Get a specific version of a report type.
   */
  "get-report-version": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The version of the report type.
         * @example {{version}}
         */
        version: number;
        /**
         * @description Identifies the type of report.
         * @example {{name}}
         */
        name: string;
      };
    };
    responses: {
      /** @description Success. */
      200: {
        content: {
          "application/json": {
            /** @description When enabled, indicates the report can be executed by the current user. */
            available: boolean;
            /** @description The name of the object by which data is queried. */
            businessObjectName?: string;
            /** @description The number of days for which this report's data is available. */
            dataRetentionDays: number;
            /** @description When enabled, indicates that this is an older version of the report. */
            deprecated: boolean;
            /** @description The set of available filters available for this report. */
            filters?: ({
                /** @description Provides documentation describing the available filter. */
                fullDescription?: string;
                /** @description The name of the available filter. */
                name?: string;
                /** @description When enabled, you need to specify this filter when executing the report. */
                required?: boolean;
                /**
                 * @description The type of data this filter expects, either arbitrary `int` or `string`, or a fixed `enum` specified by `values`.
                 * @enum {string}
                 */
                type?: "string" | "int" | "enum";
                /** @description When the `type` of filter is `enum`, this lists available values. */
                values?: {
                    /** @description Where necessary, provides documentation describing the enumerated value. */
                    fullDescription?: string;
                    /** @description Specifies each enumerated string value. */
                    value: string;
                  }[];
              })[];
            /** @description Documentation that describes this report. */
            fullDescription?: string;
            /** @description This indicates names of columns by which reported data is grouped. It's reflected in the generated report's metadata. */
            groupBy?: string[];
            /** @description Specifies this report's support for grouping outlying values under a single category. */
            groupOutlyingValues?: {
              /** @description Indicates whether this report allows you to group outlying values. */
              enabled: boolean;
              /**
               * @description Indicates the default category name under which outlying values group within a single category. You can provide your own name to override this default.
               * @default Other
               */
              groupName?: string;
              /**
               * @description Indicates the default number of categories to report on separately before grouping under a single category. You can provide your own threshold value to override this default.
               * @default 9
               */
              groupThreshold?: number;
            };
            /** @description Specifies the set of available spans of time to aggregate data by. Use one of these values as the `interval` query parameter when executing the report. */
            intervals: string[];
            /** @description The default number of data rows included for this report. */
            limit?: number;
            /** @description Specifies dynamic hypermedia links to report-generating operations. */
            links?: {
                /** @description The hypermedia URL linking the API resource. */
                href: string;
                /**
                 * @description The HTTP method to call the `href` link with. If unspecified, uses the GET method.
                 * @default GET
                 */
                method?: string;
                /** @description Identifies the type of resource. */
                rel: string;
              }[];
            /** @description The maximum number of data rows permitted for this report. */
            maxLimit?: number;
            /** @description The set of available metrics available for this report. */
            metrics?: {
                /** @description Provides documentation describing the available metric. */
                fullDescription?: string;
                /** @description The name of the available metric. */
                name: string;
              }[];
            /** @description Specifies the name of the report. */
            name: string;
            /**
             * @description The report type. Either `HIERARCHICAL` with two columns you can group data by, with the first being Time, or `FLAT`.
             * @enum {string}
             */
            outputType?: "FLAT" | "HIERARCHICAL";
            /** @description If specified, this lists any product you need to execute the report. */
            requiredProducts?: string[];
            /** @description Information about required role to run this report. */
            requiredRoles: string[];
            /**
             * @description Whether this version of the report is `PUBLISHED` or `DEPRECATED`. Selecting `DEPRECATED` enables the `deprecated` JSON member.
             * @enum {string}
             */
            status: "PUBLISHED" | "DEPRECATED";
            /** @description Allows to use `page` and `pageSize` parameters to retrieve non aggregated data. */
            supportsPagination?: boolean;
            /** @description Groups report results by time. */
            timeBased?: boolean;
            /** @description The version of this report. */
            version: number;
          };
        };
      };
    };
  };
  /**
   * Get a cacheable report
   * @description Produce a report in either JSON or CSV format for a specific version of a type of report.  While functionally identical to [Generate a report](https://techdocs.akamai.com/reporting/reference/post-report-version-data), this alternative GET operation specifies all request data as query parameters.
   */
  "get-report-version-data": {
    parameters: {
      query: {
        /**
         * @description Specifies the start of the reported period as an ISO 8601 date with timezone.
         * @example {{start}}
         */
        start: string;
        /**
         * @description Specifies the end of the reported period as an ISO 8601 date with timezone. Any data that matches the `end` value's timestamp is excluded from the report.
         * @example {{end}}
         */
        end: string;
        /**
         * @description __Enum__ The duration of each data record, either `FIVE_MINUTES`, `HOUR`, `DAY`, `WEEK`, or `MONTH`. Support for specific interval values may vary by report type.
         * @example {{interval}}
         */
        interval: "FIVE_MINUTES" | "HOUR" | "DAY" | "WEEK" | "MONTH";
        /**
         * @description As an alternative to `allObjectIds`, specifies the set of unique IDs for the given object type you want to report on, formatted as a comma-delimited list.
         * @example {{objectIds}}
         */
        objectIds?: string;
        /**
         * @description As an alternative to `objectIds`, enabling this generates a report that includes all IDs available for the specified object type (each report supports only one specific object type). This parameter is ignored if the request also specifies a set of `objectIds`.
         * @example {{allObjectIds}}
         */
        allObjectIds?: boolean;
        /**
         * @description Specifies a comma-separated list of metrics to include in the report, otherwise all metrics if omitted.  The set of available metrics depends on the type of report.
         * @example {{metrics}}
         */
        metrics?: string;
        /**
         * @description Specifies criteria to filter the report's data.  The set of available filters depends on the type of report.  Separate each filter name and value with an equals (`=`) character, and separate various name/value pairs with commas (`,`). To specify more than one filter value, repeat the filter name. See the accompanying example for guidance. URL-encode the entire value in the GET request.
         * @example {{filters}}
         */
        filters?: string;
        /**
         * @description For reports that allow non-top values to cluster, this specifies the number of top values to report on separately.
         * @example {{dataWrapNumberOfItems}}
         */
        dataWrapNumberOfItems?: number;
        /**
         * @description Label used as title for grouped record.
         * @example {{dataWrapLabel}}
         */
        dataWrapLabel?: string;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The version of the report type.
         * @example {{version}}
         */
        version: number;
        /**
         * @description Identifies the type of report.
         * @example {{name}}
         */
        name: string;
      };
    };
    responses: {
      /** @description Success. */
      200: {
        content: {
          "application/json": {
            /** @description Array of objects representing data rows suitable for aggregation. The value of the `groupBy` array always appears as a key for each row to indicate by which metric it is grouped and sorted. */
            data: {
                /** @description For certain time series reports, an ISO 8601 timestamp marking the start of each record. */
                startdatetime?: string;
                /** @description For certain time series reports, an ISO 8601 timestamp marking the start of each record. */
                timestamp?: string;
                [key: string]: unknown;
              }[];
            /** @description Collects context about the requested data set based on the request's parameters and contents of the query request object, and supplies presentational information for use in report output. */
            metadata: {
              /** @description Links to self/previous/next pages of data. */
              _links?: Record<string, never>;
              /** @description If data has not been finalized, this ISO 8601 timestamp indicates for when data is no longer available. Otherwise the value is `null` for finalized data. */
              availableDataEnds: string | null;
              /** @description Provides interface labels for `data` and `summaryStatistics` items. */
              columns: {
                  /** @description The interface label to assign to the corresponding `name`. */
                  label?: string;
                  /** @description The name of the `data` or `summaryStatistics` member. */
                  name?: string;
                }[];
              /** @description The end range of the requested data in ISO 8601 format. This reflects the value of the [Generate a report](https://techdocs.akamai.com/reporting/reference/post-report-version-data) operation's `end` parameter. */
              end: string;
              /** @description List of all filters (explicitly provided by user as well as implicitly resolved) used when retrieving data for this report. */
              filters: {
                  /** @description Reflects the name of the filter specified in the request, or included in the default set for the report type. */
                  name?: string;
                  /** @description Reflects the set of requested filter values. */
                  value?: string[];
                }[];
              /** @description Specifies the set of fields by which `data` is grouped and sorted. The `groupBy` field is specified along with the request `metrics` in each `data` row. */
              groupBy: string[];
              /**
               * @description The duration of each record in the report, either `FIVE_MINUTES`, `HOUR`, `DAY`, `WEEK`, or `MONTH`. This reflects the value of the [Generate a report](https://techdocs.akamai.com/reporting/reference/post-report-version-data) operation's `interval` parameter.
               * @enum {string}
               */
              interval: "FIVE_MINUTES" | "HOUR" | "DAY" | "WEEK" | "MONTH";
              /** @description The name of the current report type. */
              name?: string;
              /** @description Reflects the set of `objectIds` from the query request. */
              objectIds: string[];
              /** @description Current page of the data. */
              page?: number;
              /** @description Size of the current page. */
              pageSize?: number;
              /** @description The total number of `data` records included in the report. */
              rowCount: number;
              /** @description The start range of the requested data in ISO 8601 format. This reflects the value of the [operation's](https://techdocs.akamai.com/reporting/reference/post-report-version-data) `start` parameter. */
              start: string;
              /** @description If data has not been finalized, this ISO 8601 timestamp indicates when it is estimated to complete. Otherwise the value is `null` for finalized data. */
              suggestedRetryTime: string | null;
              /** @description Reflects the URL called to retrieve this data. */
              uri?: string;
              /** @description The version of the current report type. */
              version?: string;
            };
            /** @description Collects Key Performance Indicator data. The name of each KPI metric serves as the object key. */
            summaryStatistics: {
              /** @description Encapsulates information for each Key Performance Indicator. The name of each KPI metric is the object key within the `summaryStatistics` object. */
              keyPerformanceIndicator?: {
                /** @description Collects additional context for each reported KPI. Otherwise the object is empty. */
                details: {
                  /** @description ISO 8601 timestamp indicating when this metric reached this value, for example when a desired minimum or maximum threshold was fulfilled. */
                  startdatetime?: string;
                  [key: string]: unknown;
                };
                /** @description The value that qualifies a fulfilling the KPI. Numeric values are represented as strings. */
                value: string;
              };
            };
          };
          "text/csv": string;
        };
      };
      /** @description Invalid report request. Appropriate message is returned. */
      400: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Access is forbidden for requested object IDs. */
      403: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Generate a report
   * @description Produce a report in either JSON or CSV format for a specific version of a type of report. In CSV data, values with commas or space characters are quoted. Query parameters specify the range of data and the aggregation interval for each record.
   */
  "post-report-version-data": {
    parameters: {
      query: {
        /**
         * @description Specifies the start of the reported period as an ISO 8601 date with timezone.
         * @example {{start}}
         */
        start: string;
        /**
         * @description Specifies the end of the reported period as an ISO 8601 date with timezone. Any data that matches the `end` value's timestamp is excluded from the report.
         * @example {{end}}
         */
        end: string;
        /**
         * @description __Enum__ The duration of each data record, either `FIVE_MINUTES`, `HOUR`, `DAY`, `WEEK`, or `MONTH`. Support for specific interval values may vary by report type.
         * @example {{interval}}
         */
        interval: "FIVE_MINUTES" | "HOUR" | "DAY" | "WEEK" | "MONTH";
        /**
         * @description For reports that allow non-top values to cluster, this specifies the number of top values to report on separately.
         * @example {{dataWrapNumberOfItems}}
         */
        dataWrapNumberOfItems?: number;
        /**
         * @description Label used as title for grouped record.
         * @example {{dataWrapLabel}}
         */
        dataWrapLabel?: string;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The version of the report type.
         * @example {{version}}
         */
        version: number;
        /**
         * @description Identifies the type of report.
         * @example {{name}}
         */
        name: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "metrics": [
         *     "top_hits",
         *     "top_urls",
         *     "browser_hits",
         *     "edgres_hits_success",
         *     "edgres_hits_success_total",
         *     "edgres_hits_success_min",
         *     "edgres_hits_success_max",
         *     "origin_hits_success",
         *     "origin_hits_success_total",
         *     "origin_hits_success_min",
         *     "origin_hits_success_max"
         *   ],
         *   "objectIds": [
         *     "536194",
         *     "536198",
         *     "539651",
         *     "539798",
         *     "539987"
         *   ],
         *   "filters": {
         *     "ip_version": [
         *       "ipv4"
         *     ],
         *     "traffic_type": [
         *       "standard_secure"
         *     ]
         *   }
         * }
         */
        "application/json": {
          /** @description Specifies a set of custom filters, with each filter's name keying an array with each filter's set of values. The set of available filters depends on the type of report. */
          filters?: Record<string, never>;
          /** @description The set of desired metrics. The set of available metrics depends on the type of report. If omitted, the report includes all available metrics. */
          metrics?: string[];
          /** @description Unique IDs for the given object type you want to report on. */
          objectIds: string[];
        };
      };
    };
    responses: {
      /** @description Success. */
      200: {
        content: {
          "application/json": {
            /** @description Array of objects representing data rows suitable for aggregation. The value of the `groupBy` array always appears as a key for each row to indicate by which metric it is grouped and sorted. */
            data: {
                /** @description For certain time series reports, an ISO 8601 timestamp marking the start of each record. */
                startdatetime?: string;
                /** @description For certain time series reports, an ISO 8601 timestamp marking the start of each record. */
                timestamp?: string;
                [key: string]: unknown;
              }[];
            /** @description Collects context about the requested data set based on the request's parameters and contents of the query request object, and supplies presentational information for use in report output. */
            metadata: {
              /** @description Links to self/previous/next pages of data. */
              _links?: Record<string, never>;
              /** @description If data has not been finalized, this ISO 8601 timestamp indicates for when data is no longer available. Otherwise the value is `null` for finalized data. */
              availableDataEnds: string | null;
              /** @description Provides interface labels for `data` and `summaryStatistics` items. */
              columns: {
                  /** @description The interface label to assign to the corresponding `name`. */
                  label?: string;
                  /** @description The name of the `data` or `summaryStatistics` member. */
                  name?: string;
                }[];
              /** @description The end range of the requested data in ISO 8601 format. This reflects the value of the [Generate a report](https://techdocs.akamai.com/reporting/reference/post-report-version-data) operation's `end` parameter. */
              end: string;
              /** @description List of all filters (explicitly provided by user as well as implicitly resolved) used when retrieving data for this report. */
              filters: {
                  /** @description Reflects the name of the filter specified in the request, or included in the default set for the report type. */
                  name?: string;
                  /** @description Reflects the set of requested filter values. */
                  value?: string[];
                }[];
              /** @description Specifies the set of fields by which `data` is grouped and sorted. The `groupBy` field is specified along with the request `metrics` in each `data` row. */
              groupBy: string[];
              /**
               * @description The duration of each record in the report, either `FIVE_MINUTES`, `HOUR`, `DAY`, `WEEK`, or `MONTH`. This reflects the value of the [Generate a report](https://techdocs.akamai.com/reporting/reference/post-report-version-data) operation's `interval` parameter.
               * @enum {string}
               */
              interval: "FIVE_MINUTES" | "HOUR" | "DAY" | "WEEK" | "MONTH";
              /** @description The name of the current report type. */
              name?: string;
              /** @description Reflects the set of `objectIds` from the query request. */
              objectIds: string[];
              /** @description Current page of the data. */
              page?: number;
              /** @description Size of the current page. */
              pageSize?: number;
              /** @description The total number of `data` records included in the report. */
              rowCount: number;
              /** @description The start range of the requested data in ISO 8601 format. This reflects the value of the [operation's](https://techdocs.akamai.com/reporting/reference/post-report-version-data) `start` parameter. */
              start: string;
              /** @description If data has not been finalized, this ISO 8601 timestamp indicates when it is estimated to complete. Otherwise the value is `null` for finalized data. */
              suggestedRetryTime: string | null;
              /** @description Reflects the URL called to retrieve this data. */
              uri?: string;
              /** @description The version of the current report type. */
              version?: string;
            };
            /** @description Collects Key Performance Indicator data. The name of each KPI metric serves as the object key. */
            summaryStatistics: {
              /** @description Encapsulates information for each Key Performance Indicator. The name of each KPI metric is the object key within the `summaryStatistics` object. */
              keyPerformanceIndicator?: {
                /** @description Collects additional context for each reported KPI. Otherwise the object is empty. */
                details: {
                  /** @description ISO 8601 timestamp indicating when this metric reached this value, for example when a desired minimum or maximum threshold was fulfilled. */
                  startdatetime?: string;
                  [key: string]: unknown;
                };
                /** @description The value that qualifies a fulfilling the KPI. Numeric values are represented as strings. */
                value: string;
              };
            };
          };
          "text/csv": string;
        };
      };
      /** @description Invalid report request. Appropriate message is returned. */
      400: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Access is forbidden for requested object IDs. */
      403: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
}
