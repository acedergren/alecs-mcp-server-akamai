/**
 * Generated from Akamai Edge DNS OpenAPI Specification
 * DO NOT EDIT MANUALLY
 * 
 * Generated on: 2025-06-29T12:00:25.690Z
 * Source: https://raw.githubusercontent.com/akamai/akamai-apis/main/apis/config-dns/v2/openapi.json
 */

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export type paths = {
  "/changelists": {
    /**
     * List user's change lists
     * @description Retrieves the Change Lists that you created. Otherwise, displays both stale change lists and change lists for zones you can no longer access.
     */
    get: operations["get-changelists"];
    /**
     * Create a change list
     * @description Creates a new Change List based on the most recent version of a zone. No POST body is needed, since the object is read-only.
     */
    post: operations["post-changelists"];
  };
  "/changelists/{zone}": {
    /**
     * Get change list
     * @description Describes a Change List, showing its base zone version, last modified time, and current change tag.
     */
    get: operations["get-changelists-zone"];
    /**
     * Delete change list
     * @description Removes an unneeded Change List.
     */
    delete: operations["delete-changelists-zone"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/changelists/{zone}/diff": {
    /**
     * Show changes
     * @description Show [differences](https://techdocs.akamai.com/edge-dns/reference/get-zone-versions-diff) between this change list and its base version.
     */
    get: operations["get-changelists-zone-diff"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/changelists/{zone}/names": {
    /**
     * Get record set names for change list
     * @description Retrieves a list of record names that exist on this zone, based on the change list. If a record is deleted in the change list, it doesn't appear on the list of records returned. If no record sets exist within the change list, this operation returns an empty list.
     */
    get: operations["get-changelists-zone-names"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/changelists/{zone}/names/{name}/types": {
    /**
     * Get record set types for name and change list
     * @description Retrieves a list of record set types that exist at a given name based on the selected change list. The list of record sets returned reflect the changes added to the change list. Records deleted in this change list do not appear. If the name does not exist within the change list, returns an empty list.
     */
    get: operations["get-changelists-zone-names-name-types"];
    parameters: {
      path: {
        /**
         * @description A domain name, including the parent zone.
         * @example {{name}}
         */
        name: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/changelists/{zone}/names/{name}/types/{type}": {
    /**
     * Get a record set for change list
     * @description Returns an individual record set based on the selected change list. The list of record sets returned reflects any changes added to this change list. Record sets are annotated with the related change as clean, modified, new, or deleted. This call works even if the change list is stale.
     */
    get: operations["get-changelists-zone-names-name-types-type"];
    parameters: {
      path: {
        /**
         * @description The record set type.
         * @example {{type}}
         */
        type: string;
        /**
         * @description A domain name, including the parent zone.
         * @example {{name}}
         */
        name: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/changelists/{zone}/recordsets": {
    /**
     * Get record sets for change list
     * @description Retrieves the current list of record sets based on the selected change list. The record sets returned reflect any Changes added to this change list. This call works even if the change list is stale. This operation is (paginated](ref:use-pagination).
     */
    get: operations["get-changelists-zone-recordsets"];
    /**
     * Upload master zone file to change list
     * @description Replaces your change list's record sets with the contents of a master zone file.
     */
    post: operations["post-changelists-zone-recordsets"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/changelists/{zone}/recordsets/add-change": {
    /**
     * Modify record set for change list
     * @description Adds a Record Set Change to this change list. Each change is an operation that affects a single record set: `ADD`, `EDIT`, or `DELETE`.
     */
    post: operations["post-changelists-zone-recordsets-add-change"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/changelists/{zone}/settings": {
    /**
     * Get change list settings
     * @description Retrieves the zone's settings based on the selected change list. Zone settings include metadata about the zone, but not the record sets. The data returned reflects the zone setting changes included in the change list. This call works even if the change list is stale.
     */
    get: operations["get-changelists-zone-settings"];
    /**
     * Update change list settings
     * @description Updates the change list with new Zone settings. The entire Zone object is needed no matter how many fields you're updating.
     */
    put: operations["put-changelists-zone-settings"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/changelists/{zone}/submit": {
    /**
     * Submit change list
     * @description Applies all of the changes in this change list to the current zone. This operation fails if the change list has become stale.
     */
    post: operations["post-changelists-zone-submit"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/changelists/search": {
    /**
     * Search for change lists
     * @description Given a list of zone names, this operation lists the Change Lists that you have created on those zones. If the input list is empty, the response does not return any change lists. Note that it is possible to own a change list on a zone that you are no longer allowed to access.
     */
    post: operations["post-changelists-search"];
  };
  "/data/authorities": {
    /**
     * List authoritative nameservers
     * @description Retrieves the currently assigned Akamai authoritative nameservers for one or more contracts.
     */
    get: operations["get-data-authorities"];
  };
  "/data/contracts": {
    /**
     * List contracts
     * @description Lists the contracts accessible to the current user. Each Contract object includes the list of features and permissions that are available to you on that contract.
     */
    get: operations["get-data-contracts"];
  };
  "/data/dns-sec-algorithms": {
    /**
     * List DNSSEC algorithms
     * @description Retrieves a list of DNSSEC algorithm names.
     */
    get: operations["get-data-dns-sec-algorithms"];
  };
  "/data/edgehostnames": {
    /**
     * List edge hostnames
     * @description Displays a list of Edge Hostnames that have been configured for the current customer.
     */
    get: operations["get-data-edgehostnames"];
  };
  "/data/groups": {
    /**
     * List groups
     * @description Lists the groups accessible to the current user. Each Group object includes the list of contracts related to that group, as well as your permissions of `READ`, `WRITE`, `ADD`, or `DELETE` zone on that group.
     */
    get: operations["get-data-groups"];
  };
  "/data/recordset-types": {
    /**
     * List record types
     * @description Retrieves a list of record types you can add to the requested zone. Record types depend on both the zone type and the available contract features.
     */
    get: operations["get-record-set-types"];
  };
  "/data/tsig-algorithms": {
    /**
     * List TSIG key algorithms
     * @description Retrieves a list of TSIG algorithm names.
     */
    get: operations["get-data-tsig-algorithms"];
  };
  "/keys": {
    /**
     * List TSIG keys
     * @description Get a list of the TSIG keys used by zones that you are allowed to manage.
     */
    get: operations["get-keys"];
  };
  "/keys/bulk-update": {
    /**
     * Update TSIG key for multiple zones
     * @description This updates the key data for multiple zones at once. Keep in mind that this operation can only add zones to a TSIG key, not remove them. To safely remove the association between a zone and a TSIG key, update the zone to its new TSIG key or remove the key from the zone if you're sure it's no longer needed.
     */
    post: operations["post-keys-bulk-update"];
  };
  "/keys/used-by": {
    /**
     * List zones using TSIG key
     * @description Returns a list of zone names that use the given TSIG key and for which the current user has READ access. If the list of zones returned is empty, it is possible that the given key is in use by other zones but the current user does not have permission to view those zones.
     */
    post: operations["post-keys-used-by"];
  };
  "/zones": {
    /**
     * List zones
     * @description Get a list of all zones that the current user has access to manage. Includes the version identifier, propagation status, and SOA serial number for the most recently activated version. This operation is [paginated](https://techdocs.akamai.com/edge-dns/reference/use-pagination).
     */
    get: operations["get-zones"];
    /**
     * Create a zone
     * @description Creates a new zone. Carefully review the documentation for which fields are relevant to the type of zone you are creating.
     */
    post: operations["post-zone"];
  };
  "/zones/{zone}": {
    /**
     * Get zone's settings
     * @description Retrieves the metadata for this zone. Does not include record sets.
     */
    get: operations["get-zone"];
    /**
     * Update zone's settings
     * @description Modifies a zone. You can't change the zone `type` with this operation.
     */
    put: operations["put-zone"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/aliases": {
    /**
     * Get zone's aliases
     * @description Show all zones that alias to this zone.
     */
    get: operations["get-zone-aliases"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/contract": {
    /**
     * Get zone's contract
     * @description Show data about the contract to which this zone belongs.
     */
    get: operations["get-zone-contract"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/key": {
    /**
     * Get zone's TSIG key
     * @description Retrieves the TSIG Key data for this zone. Includes a count of zones that use this key. Returns a 404 error if the zone does not have a TSIG key.
     */
    get: operations["get-zones-zone-key"];
    /**
     * Update zone's TSIG key
     * @description Creates or replaces the current TSIG Key for this zone. If other zones use the same key, does not modify those zones.
     */
    put: operations["put-zones-zone-key"];
    /**
     * Delete zone's TSIG key
     * @description Removes the TSIG Key for this zone. This action does not affect any other zone, even if they share the same TSIG key as this zone. If the zone does not currently have a key, no actions are taken and no error is thrown.
     */
    delete: operations["delete-zones-zone-key"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/key/used-by": {
    /**
     * List users of zone's TSIG key
     * @description Lists the Zones that use the same TSIG key as this zone.
     */
    get: operations["get-zones-zone-key-used-by"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/names": {
    /**
     * Get record set names for zone
     * @description Retrieves a list of record set names for a zone.
     */
    get: operations["get-zone-names"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/names/{name}/types": {
    /**
     * Get record set types for name and zone
     * @description Lists all *existing* Record set types for this name. The list of *allowed* types is available at [List record types](https://techdocs.akamai.com/edge-dns/reference/get-record-set-types). If the name does not exist within the zone, an empty list is returned.
     */
    get: operations["get-zone-name-types"];
    parameters: {
      path: {
        /**
         * @description A domain name, including the parent zone.
         * @example {{name}}
         */
        name: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/names/{name}/types/{type}": {
    /**
     * Get a record set
     * @description Retrieves a single record set for the zone, record name, and record type specified in the URL.
     */
    get: operations["get-zone-name-type"];
    /**
     * Replace a record set
     * @description Replaces an existing Record set with the request body. The `name` and `type` need to match the existing record.
     */
    put: operations["put-zones-zone-names-name-types-type"];
    /**
     * Create a record set
     * @description Creates a new Record set with the specified name and type.
     */
    post: operations["post-zones-zone-names-name-types-type"];
    /**
     * Delete a record set
     * @description Removes an existing record set.
     */
    delete: operations["delete-zone-name-type"];
    parameters: {
      path: {
        /**
         * @description The record set type.
         * @example {{type}}
         */
        type: string;
        /**
         * @description A domain name, including the parent zone.
         * @example {{name}}
         */
        name: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/recordsets": {
    /**
     * Get zone's record sets
     * @description Lists all Record Sets for this Zone. It works only for `PRIMARY` and `SECONDARY` zones. This operation is [paginated](https://techdocs.akamai.com/edge-dns/reference/pagination).
     */
    get: operations["get-zones-zone-recordsets"];
    /**
     * Replace record sets
     * @description Replaces the entire list of Record Sets that currently exists with the list provided.
     */
    put: operations["put-zones-zone-recordsets"];
    /**
     * Create multiple record sets
     * @description Creates multiple new Record Sets on this Zone. If any record set fails to create, for example, because a record set with that name and type already exists, the entire operation fails.
     */
    post: operations["post-zones-zone-recordsets"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/versions": {
    /**
     * List zone's versions
     * @description Shows the settings for current and prior versions of this Zone, in reverse chronological order of modification. Many versions in this list may look very similar because a new version is created every time the zone's settings or record sets are changed. This operation is [paginated](https://techdocs.akamai.com/edge-dns/reference/use-pagination).
     */
    get: operations["get-zone-versions"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/versions/{uuid}": {
    /**
     * Get zone version
     * @description Returns an image of the Zone from a previous version. Shows only zone settings, not record sets.
     */
    get: operations["get-zone-versions-uuid"];
    parameters: {
      path: {
        /**
         * @description A UUID indicating a zone version tag.
         * @example {{uuid}}
         */
        uuid: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/versions/{uuid}/recordsets": {
    /**
     * Get version's record sets
     * @description Lists all record sets for this version of this zone. This operation is [paginated](https://techdocs.akamai.com/edge-dns/reference/use-pagination).
     */
    get: operations["get-zone-versions-recordsets"];
    parameters: {
      path: {
        /**
         * @description A UUID indicating a zone version tag.
         * @example {{uuid}}
         */
        uuid: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/versions/{uuid}/recordsets/activate": {
    /**
     * Reactivate version
     * @description Create and activate a new version of the zone by copying the record sets from a prior version of this zone and reapplying them to the current version. The new version has a new, auto-incremented SOA serial number, and the zone's modification data is set to the current time and user. All other zone settings remain the same as the current version.
     */
    post: operations["post-zones-zone-versions-uuid-recordsets-activate"];
    parameters: {
      path: {
        /**
         * @description A UUID indicating a zone version tag.
         * @example {{uuid}}
         */
        uuid: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/versions/{uuid}/zone-file": {
    /**
     * Get version's master zone file
     * @description Downloads the record sets from a prior zone version in [master zone file](https://techdocs.akamai.com/edge-dns/reference/get-zone-file) format. This applies to primary zones and secondary zones.
     */
    get: operations["get-zones-zone-versions-uuid-zone-file"];
    parameters: {
      path: {
        /**
         * @description A UUID indicating a zone version tag.
         * @example {{uuid}}
         */
        uuid: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/versions/diff": {
    /**
     * Show differences
     * @description Displays the [difference](https://techdocs.akamai.com/edge-dns/reference/get-zone-versions-diff) between any two versions of a zone, as specified in the query parameters.
     */
    get: operations["get-zone-versions-diff"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/{zone}/zone-file": {
    /**
     * Get master zone file
     * @description Download this zone's record set data in master zone file format. This operation applies to primary zones and secondary zones. See [RFC 1035](http://tools.ietf.org/html/rfc1035) section 5 and [RFC 1034](http://tools.ietf.org/html/rfc1034) section 3.6.1 for more information.  `AKAMAICDN` and `AKAMAITLC` records can't be represented in this format, so they are displayed as comment lines.
     */
    get: operations["get-zones-zone-zone-file"];
    /**
     * Post master zone file
     * @description Upload new record set data for this zone in master zone file format. Replaces any existing record sets. This operation applies to primary zones and secondary zones. See [RFC 1035](http://tools.ietf.org/html/rfc1035) section 5 and [RFC 1034](http://tools.ietf.org/html/rfc1034) section 3.6.1 for more information.  Zone files can contain only US-ASCII characters 0&ndash;127. Where allowed, you can encode high-order ASCII characters, 128+, with a backslash plus a three-digit decimal number representing the byte value. For example, `\233` instead of `&eacute;`.  `AKAMAICDN` and `AKAMAITLC` records can't be represented in this format. Uploading a zone file does not affect these records.
     */
    post: operations["post-zones-zone-zone-file"];
    parameters: {
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
  };
  "/zones/create-requests": {
    /**
     * Submit bulk-create request
     * @description Submits a request to create one or more new Zones asynchronously. The request body contains a JSON array. Each object in the array contains the data necessary to create a zone. All zones are created on the same contract and group.  An offline task creates the new zones. You can use the response's `requestId` to check the task's status and view its results once it completes.
     */
    post: operations["post-zones-create-requests"];
  };
  "/zones/create-requests/{requestId}": {
    /**
     * Check bulk-create status
     * @description Retrieves the current status of a running or completed request. The `requestId` was returned when the create request was initiated.
     */
    get: operations["get-zones-create-requests-requestid"];
    parameters: {
      path: {
        /**
         * @description The ID of the create request.
         * @example {{requestId}}
         */
        requestId: string;
      };
    };
  };
  "/zones/create-requests/{requestId}/result": {
    /**
     * Get bulk-create result
     * @description Retrieves the results from a completed request.
     */
    get: operations["get-zones-create-requests-requestid-result"];
    parameters: {
      path: {
        /**
         * @description The ID of the create request.
         * @example {{requestId}}
         */
        requestId: string;
      };
    };
  };
  "/zones/delete-requests": {
    /**
     * Submit bulk-delete request
     * @description Submits a request to delete one or more new Zones asynchronously. The request body contains a JSON array. Each element in the array is the name of a zone to be deleted.  Before deleting a zone from the Edge DNS system, the API makes sure Akamai servers aren't receiving DNS requests for that zone. It also checks that the zone is not currently delegated to Akamai's nameservers.  An offline task deletes the new zones. The result of this operation is a `requestId`, that you can use to check the task's status and view its results once it completes.
     */
    post: operations["post-zones-delete-requests"];
  };
  "/zones/delete-requests/{requestId}": {
    /**
     * Check bulk-delete status
     * @description Retrieves the current status of a running or completed request. The `requestId` was returned when the delete request was initiated.
     */
    get: operations["get-zones-delete-requests-requestid"];
    parameters: {
      path: {
        /**
         * @description The ID of the delete request.
         * @example {{requestId}}
         */
        requestId: string;
      };
    };
  };
  "/zones/delete-requests/{requestId}/result": {
    /**
     * Get bulk-delete result
     * @description Retrieves the `results` from a completed request.
     */
    get: operations["get-zones-delete-requests-requestid-result"];
    parameters: {
      path: {
        /**
         * @description The ID of the delete request.
         * @example {{requestId}}
         */
        requestId: string;
      };
    };
  };
  "/zones/dns-sec-status": {
    /**
     * Get zones DNSSEC status
     * @description Returns the current DNSSEC status for one or more zones.
     */
    post: operations["post-zones-dns-sec-status"];
  };
  "/zones/zone-transfer-status": {
    /**
     * Get secondary zones transfer status
     * @description Returns the results of the most recent zone transfer attempts for one or more zones.  When you configure a `SECONDARY` zone, several Akamai nameservers known as zone transfer agents perform zone transfer requests to fetch the record data from the zone's configured master nameservers. The data returned by this operation describes the results of those zone transfers.
     */
    post: operations["post-zones-zone-transfer-status"];
  };
};

export type webhooks = Record<string, never>;

export type components = Record<string, never>;

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = {

  /**
   * List user's change lists
   * @description Retrieves the Change Lists that you created. Otherwise, displays both stale change lists and change lists for zones you can no longer access.
   */
  "get-changelists": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description Metadata about a change list. Includes the zone version that the change list was derived from when it was created. */
            changeLists: {
                /**
                 * Format: uuid
                 * @description An ETag for this change list.
                 */
                changeTag: string;
                /** @description An ISO 8601 date indicating the last time the change list was modified. */
                lastModifiedDate: string;
                /** @description If the parent version is not current, this change list is stale. */
                stale: boolean;
                /** @description The name of the zone. */
                zone: string;
                /**
                 * Format: uuid
                 * @description The zone version identifier for the parent version of this change list.
                 */
                zoneVersionId: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * Create a change list
   * @description Creates a new Change List based on the most recent version of a zone. No POST body is needed, since the object is read-only.
   */
  "post-changelists": {
    parameters: {
      query: {
        /**
         * @description The name of an Edge DNS zone.
         * @example {{zone}}
         */
        zone: string;
        /**
         * @description __Enum__ You can't create a change list if you've already created one for this zone. The default `none` raises an error if a change list exists. Use `any` to delete any existing change lists before running the create operation. Use `stale` to automatically delete stale change lists before running the create operation. The `stale` option raises an error if there's a change list attached to the current version.
         * @example {{overwrite}}
         */
        overwrite?: "any" | "stale" | "none";
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description Successful response. */
      201: {
        headers: {
          /** @description Provides a URL path you can GET the newly created resource from. */
          Location?: string;
        };
        content: {
          "application/json": {
            /**
             * Format: uuid
             * @description An ETag for this change list.
             */
            changeTag: string;
            /** @description An ISO 8601 date indicating the last time the change list was modified. */
            lastModifiedDate: string;
            /** @description If the parent version is not current, this change list is stale. */
            stale: boolean;
            /** @description The name of the zone. */
            zone: string;
            /**
             * Format: uuid
             * @description The zone version identifier for the parent version of this change list.
             */
            zoneVersionId: string;
          };
        };
      };
    };
  };
  /**
   * Get change list
   * @description Describes a Change List, showing its base zone version, last modified time, and current change tag.
   */
  "get-changelists-zone": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /**
             * Format: uuid
             * @description An ETag for this change list.
             */
            changeTag: string;
            /** @description An ISO 8601 date indicating the last time the change list was modified. */
            lastModifiedDate: string;
            /** @description If the parent version is not current, this change list is stale. */
            stale: boolean;
            /** @description The name of the zone. */
            zone: string;
            /**
             * Format: uuid
             * @description The zone version identifier for the parent version of this change list.
             */
            zoneVersionId: string;
          };
        };
      };
      /** @description Redirect. */
      304: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * Delete change list
   * @description Removes an unneeded Change List.
   */
  "delete-changelists-zone": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * Show changes
   * @description Show [differences](https://techdocs.akamai.com/edge-dns/reference/get-zone-versions-diff) between this change list and its base version.
   */
  "get-changelists-zone-diff": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description Collections of differences between the two versions. */
            diffs: {
              /** @description A collection of record sets that have changed between two versions. */
              recordSetDiffs?: ({
                  /** @description The prior value of the settings field or record set. This may be any type of data, depending on the field that changed. The value will not exist on an `ADD` difference. */
                  fromValue?: boolean | number | Record<string, never> | string | null;
                  /** @description The name of the record set that changed. */
                  name: string;
                  /**
                   * @description The type of difference. An `ADD` difference will contain the `toValue` but not a `fromValue`. A `DELETE` difference is the other way around. An `EDIT` difference will have both fields.
                   * @enum {string}
                   */
                  operation: "ADD" | "DELETE" | "EDIT";
                  /** @description The new value of the settings field or record set. This may be any type of data, depending on the field that changed. The value will not exist on an `DELETE` difference. */
                  toValue?: boolean | number | Record<string, never> | string | null;
                  /** @description The type of the record set that changed. */
                  type: string;
                })[];
              /** @description A collection of settings fields that have changed between two versions. */
              settingsDiffs?: ({
                  /** @description The name of the settings value that changed. */
                  fieldName: string;
                  /** @description The prior value of the settings field or record set. This may be any type of data, depending on the field that changed. The value is not present for an `ADD` difference. */
                  fromValue?: boolean | number | Record<string, never> | string | null;
                  /**
                   * @description The type of difference. An `ADD` difference contains the `toValue` and a `DELETE` difference contains a `fromValue`. An `EDIT` difference contains both fields.
                   * @enum {string}
                   */
                  operation: "ADD" | "DELETE" | "EDIT";
                  /** @description The new value of the settings field or record set. This may be any type of data, depending on the field that changed. The value is not present for a `DELETE` difference. */
                  toValue?: boolean | number | Record<string, never> | string | null;
                })[];
            };
            /** @description Metadata about this diff report, describing the versions being diffed. */
            metadata: {
              /** @description The version ID of the base version. */
              fromVersionId: string;
              /**
               * Format: date-time
               * @description ISO 8601 timestamp indicating when the base version was last modified.
               */
              fromVersionLastModifiedDate: string;
              /** @description The version ID of the new version or change list. */
              toVersionId: string;
              /**
               * Format: date-time
               * @description ISO 8601 timestamp indicating when the new change list version was last modified.
               */
              toVersionLastModifiedDate: string;
            };
          };
        };
      };
    };
  };
  /**
   * Get record set names for change list
   * @description Retrieves a list of record names that exist on this zone, based on the change list. If a record is deleted in the change list, it doesn't appear on the list of records returned. If no record sets exist within the change list, this operation returns an empty list.
   */
  "get-changelists-zone-names": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description A list of record names. */
            names: string[];
          };
        };
      };
    };
  };
  /**
   * Get record set types for name and change list
   * @description Retrieves a list of record set types that exist at a given name based on the selected change list. The list of record sets returned reflect the changes added to the change list. Records deleted in this change list do not appear. If the name does not exist within the change list, returns an empty list.
   */
  "get-changelists-zone-names-name-types": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description A domain name, including the parent zone.
         * @example {{name}}
         */
        name: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description A list of record types. */
            types: string[];
          };
        };
      };
    };
  };
  /**
   * Get a record set for change list
   * @description Returns an individual record set based on the selected change list. The list of record sets returned reflects any changes added to this change list. Record sets are annotated with the related change as clean, modified, new, or deleted. This call works even if the change list is stale.
   */
  "get-changelists-zone-names-name-types-type": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The record set type.
         * @example {{type}}
         */
        type: string;
        /**
         * @description A domain name, including the parent zone.
         * @example {{name}}
         */
        name: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description The DNS name of this record. */
            name: string;
            /** @description An array of data strings, representing multiple records within a set. The format of the `rdata` strings are dependent on the `type` of this record. Not used When the `op` value for the PATCH request is DELETE. */
            rdata: string[];
            /**
             * @description The state of this record in the change list. A `PRISTINE` record has not been changed, otherwise it has been `ADDED`, `EDITED`, or `DELETED`.
             * @enum {string}
             */
            state: "PRISTINE" | "ADDED" | "EDITED" | "DELETED";
            /** @description The number of seconds that this record should live in a resolver's cache before being refetched. Not used When the `op` value for the PATCH request is DELETE. */
            ttl: number;
            /** @description The record type. */
            type: string;
          };
        };
      };
    };
  };
  /**
   * Get record sets for change list
   * @description Retrieves the current list of record sets based on the selected change list. The record sets returned reflect any Changes added to this change list. This call works even if the change list is stale. This operation is (paginated](ref:use-pagination).
   */
  "get-changelists-zone-recordsets": {
    parameters: {
      query?: {
        /**
         * @description Sorts the list on the specified fields. You can specify multiple fields as a comma-separated list. Placing a dash before a field name sorts it in descending order. Allowed fields include `name` and `type`.
         * @example {{sortBy}}
         */
        sortBy?: string;
        /**
         * @description Displays only record sets that match one of the provided types. Specifies multiple fields as a comma-separated list. Ignores illegal or disallowed record types.
         * @example {{types}}
         */
        types?: string;
        /**
         * @description Displays only record sets whose NAME or RDATA field matches this value. The entire record set, that is all records with the same name and type are shown if any record in the set has a NAME or RDATA that matches the value case-insensitively.
         * @example {{search}}
         */
        search?: string;
        /**
         * @description Which page of results to return. The first page is page 1.
         * @example {{page}}
         */
        page?: number;
        /**
         * @description The number of results per page to return.
         * @example {{pageSize}}
         */
        pageSize?: number;
        /**
         * @description Disables paging and shows the entire list all at once. Using this parameter may significantly increase the time required to respond to the request.
         * @example {{showAll}}
         */
        showAll?: boolean;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description Information about the request. */
            metadata: Record<string, never>;
            /** @description A modification of a record set inside a change list. */
            recordsets: ({
                /** @description The DNS name of this record. */
                name: string;
                /** @description An array of data strings, representing multiple records within a set. The format of the `rdata` strings are dependent on the `type` of this record. Not used When the `op` value for the PATCH request is DELETE. */
                rdata: string[];
                /**
                 * @description The state of this record in the change list. A `PRISTINE` record has not been changed, otherwise it has been `ADDED`, `EDITED`, or `DELETED`.
                 * @enum {string}
                 */
                state: "PRISTINE" | "ADDED" | "EDITED" | "DELETED";
                /** @description The number of seconds that this record should live in a resolver's cache before being refetched. Not used When the `op` value for the PATCH request is DELETE. */
                ttl: number;
                /** @description The record type. */
                type: string;
              })[];
          };
        };
      };
    };
  };
  /**
   * Upload master zone file to change list
   * @description Replaces your change list's record sets with the contents of a master zone file.
   */
  "post-changelists-zone-recordsets": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    requestBody: {
      content: {
        /** @example example.com.        10000    IN SOA ns1.akamaidns.com. webmaster.example.com. 1 28800 14400 2419200 86400 example.com.        10000    IN NS  ns1.akamaidns.com. example.com.        10000    IN NS  ns2.akamaidns.com. example.com.            300 IN  A   10.0.0.1 example.com.            300 IN  A   10.0.0.2 www.example.com.        300 IN  A   10.0.0.1 www.example.com.        300 IN  A   10.0.0.2 */
        "text/dns": string;
      };
    };
    responses: {
      /** @description Successful response. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * Modify record set for change list
   * @description Adds a Record Set Change to this change list. Each change is an operation that affects a single record set: `ADD`, `EDIT`, or `DELETE`.
   */
  "post-changelists-zone-recordsets-add-change": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "name": "ftp.example.com",
         *   "op": "ADD",
         *   "ttl": 100,
         *   "type": "A",
         *   "rdata": [
         *     "192.0.2.80"
         *   ]
         * }
         */
        "application/json": {
          /**
           * @description The DNS name of this record.
           * @example {{name}}
           */
          name: string;
          /**
           * @description The requested operation. You can `ADD`, `DELETE`, or `EDIT` a record set.
           * @example {{op}}
           * @enum {string}
           */
          op: "ADD" | "EDIT" | "DELETE";
          /** @description An array of data strings, representing multiple records within a set. The format of the `rdata` strings are dependent on the `type` of this record. Not used when `PATCH`ing a `DELETE` operation. */
          rdata?: string[];
          /**
           * @description The number of seconds that this record should live in a resolver's cache before being refetched. Not used when `PATCH`ing a `DELETE` operation.
           * @example {{ttl}}
           */
          ttl?: number;
          /**
           * @description The record type.
           * @example {{type}}
           */
          type: string;
        };
      };
    };
    responses: {
      /** @description Successful response. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * Get change list settings
   * @description Retrieves the zone's settings based on the selected change list. Zone settings include metadata about the zone, but not the record sets. The data returned reflects the zone setting changes included in the change list. This call works even if the change list is stale.
   */
  "get-changelists-zone-settings": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /**
             * @description The current status of zone activation.
             * @enum {string}
             */
            activationState: "NEW" | "PENDING_APPROVAL" | "ACTIVE" | "OBSOLETE" | "ERROR" | "LOCKED";
            /** @description For `PRIMARY` and `SECONDARY` zones only. The number of zones of type `ALIAS` that point to this zone. */
            aliasCount?: number;
            /** @description Free-form user comments. */
            comment?: string;
            /** @description The contract for this zone. */
            contractId: string;
            /** @description Free-form user identifier for this zone, often used by resellers. */
            endCustomerId?: string;
            /** @description For `PRIMARY` and `SECONDARY` zones only. An ISO 8601 timestamp indicating when the latest version was activated. */
            lastActivationDate?: string;
            /** @description The name of the user that last edited this zone. */
            lastModifiedBy: string;
            /** @description An ISO 8601 timestamp indicating when the zone was last modified. */
            lastModifiedDate: string;
            /** @description For `SECONDARY` zones only. The names or addresses of the customer's nameservers from which the zone data should be retrieved. */
            masters?: string[];
            /** @description Whether DNSSEC Sign&Serve is enabled. Applies to `PRIMARY` and `SECONDARY` zones only. */
            signAndServe?: boolean;
            /**
             * @description The algorithm currently or last used for DNSSEC Sign&Serve. Absent if no algorithm has ever been assigned to this zone.
             * @enum {string|null}
             */
            signAndServeAlgorithm?: "RSA_SHA1" | "RSA_SHA256" | "RSA_SHA512" | "ECDSA_P256_SHA256" | "ECDSA_P384_SHA384" | null;
            /** @description Determines if cross-account subzones are enabled. This does not impact the ability to create subzones that you are presently authorized to edit. */
            subzoneGrants?: boolean;
            /** @description For `ALIAS` zones only. The name of the zone whose configuration this zone copies. */
            target?: string;
            /** @description For `SECONDARY` zones only. The TSIG key used for zone transfers. */
            tsigKey?: {
              /** @enum {string} */
              algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
              name: string;
              secret: string;
              /** @description The number of zones that reference this key. */
              zonesCount?: number;
            };
            /**
             * @description The zone type. A `PRIMARY` zone's records are stored in the Akamai Portal. A `SECONDARY` zone's records are stored on the customer's nameservers. `ALIAS` zones allow users to duplicate the configuration of an existing zone.
             * @enum {string}
             */
            type: "PRIMARY" | "SECONDARY" | "ALIAS";
            /**
             * Format: uuid
             * @description The UUID of the most recently activated version. You can use this value as an `ETag` when performing operations that affect zones.
             */
            versionId: string;
            /** @description The name of the zone. */
            zone: string;
          };
        };
      };
    };
  };
  /**
   * Update change list settings
   * @description Updates the change list with new Zone settings. The entire Zone object is needed no matter how many fields you're updating.
   */
  "put-changelists-zone-settings": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "comment": "Adding bodies of water",
         *   "type": "SECONDARY",
         *   "zone": "river.com",
         *   "masters": [
         *     "192.0.2.65",
         *     "192.0.2.171"
         *   ]
         * }
         */
        "application/json": {
          /**
           * @description Free-form user comments.
           * @example {{comment}}
           */
          comment?: string;
          /**
           * @description The contract for this zone.
           * @example {{contractId}}
           */
          contractId?: string;
          /**
           * @description Free-form user identifier for this zone, often used by resellers.
           * @example {{endCustomerId}}
           */
          endCustomerId?: string;
          /** @description For `SECONDARY` zones only. The names or addresses of the customer's nameservers from which the zone data should be retrieved. */
          masters?: string[];
          /**
           * @description Whether DNSSEC Sign&Serve is enabled. Applies to `PRIMARY` and `SECONDARY` zones only.
           * @example {{signAndServe}}
           */
          signAndServe?: boolean;
          /**
           * @description The algorithm currently or last used for DNSSEC Sign&Serve. Absent if no algorithm has ever been assigned to this zone.
           * @example {{signAndServeAlgorithm}}
           * @enum {string}
           */
          signAndServeAlgorithm?: "RSA_SHA1" | "RSA_SHA256" | "RSA_SHA512" | "ECDSA_P256_SHA256" | "ECDSA_P384_SHA384";
          /**
           * @description Determines if cross-account subzones are enabled. This does not impact the ability to create subzones that you are presently authorized to edit.
           * @example {{subzoneGrants}}
           */
          subzoneGrants?: boolean;
          /**
           * @description For `ALIAS` zones only. The name of the zone whose configuration this zone copies.
           * @example {{target}}
           */
          target?: string;
          /** @description For `SECONDARY` zones only. The TSIG key used for zone transfers. */
          tsigKey?: {
            /** @enum {string} */
            algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
            name: string;
            secret: string;
            /** @description The number of zones that reference this key. */
            zonesCount?: number;
          };
          /**
           * @description The zone type. A `PRIMARY` zone's records are stored in the Akamai Portal. A `SECONDARY` zone's records are stored on the customer's nameservers. `ALIAS` zones allow users to duplicate the configuration of an existing zone.
           * @example {{type}}
           * @enum {string}
           */
          type: "PRIMARY" | "SECONDARY" | "ALIAS";
          /**
           * @description The name of the zone.
           * @example {{zone}}
           */
          zone: string;
        };
      };
    };
    responses: {
      /** @description Successful response. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * Submit change list
   * @description Applies all of the changes in this change list to the current zone. This operation fails if the change list has become stale.
   */
  "post-changelists-zone-submit": {
    parameters: {
      query: {
        /**
         * @description If set to true, skips safety checks when disabling sign and serve.
         * @example {{skipSignAndServeSafetyCheck}}
         */
        skipSignAndServeSafetyCheck: boolean;
        /**
         * @description A new comment string that may be blank. If not included, the old comment is copied.
         * @example {{comment}}
         */
        comment?: string;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * Search for change lists
   * @description Given a list of zone names, this operation lists the Change Lists that you have created on those zones. If the input list is empty, the response does not return any change lists. Note that it is possible to own a change list on a zone that you are no longer allowed to access.
   */
  "post-changelists-search": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "zones": [
         *     "river.com",
         *     "brook.com"
         *   ]
         * }
         */
        "application/json": {
          /** @description A list of zone names. */
          zones: string[];
        };
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description Metadata about a change list. Includes the zone version that the change list was derived from when it was created. */
            changeLists: {
                /**
                 * Format: uuid
                 * @description An ETag for this change list.
                 */
                changeTag: string;
                /** @description An ISO 8601 date indicating the last time the change list was modified. */
                lastModifiedDate: string;
                /** @description If the parent version is not current, this change list is stale. */
                stale: boolean;
                /** @description The name of the zone. */
                zone: string;
                /**
                 * Format: uuid
                 * @description The zone version identifier for the parent version of this change list.
                 */
                zoneVersionId: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * List authoritative nameservers
   * @description Retrieves the currently assigned Akamai authoritative nameservers for one or more contracts.
   */
  "get-data-authorities": {
    parameters: {
      query?: {
        /**
         * @description Show the authoritative nameservers for the specified contracts. If not present, defaults to all contracts that you can access.
         * @example {{contractIds}}
         */
        contractIds?: string;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description Akamai assigns a unique set of authoritative nameservers for each contract. These authorities should be used as the `NS` (nameserver) records on all zones belonging to this contract. */
            contracts: {
                /** @description A list of Akamai authoritative nameservers for this contract. */
                authorities: string[];
                /** @description The contract ID. */
                contractId: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * List contracts
   * @description Lists the contracts accessible to the current user. Each Contract object includes the list of features and permissions that are available to you on that contract.
   */
  "get-data-contracts": {
    parameters: {
      query: {
        /**
         * @description The currently selected group ID. This is a feature in the Pulsar UI where a user is able to specify a particular group to manage.
         * @example {{gid}}
         */
        gid: number;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description Information about a customer contract and associated permissions. */
            contracts: ({
                /** @description The ID of the contract. */
                contractId: string;
                /** @description The name of the customer associated with this contract. */
                contractName: string;
                /** @description An internal description of the contract type. */
                contractTypeName: string;
                /** @description Edge DNS features that you have access to. */
                features: ("ALIAS_ZONES" | "DNSSEC_SELF_SIGN" | "DNSSEC_SIGN_AND_SERVE" | "FORCE_DELETE" | "PRIMARY_ZONES" | "SECONDARY_ZONES" | "ZONE_APEX_MAPPING" | "TLD_ZONES" | "SUBZONE_GRANTS")[];
                /** @description The maximum number of zones you are able to create on this contract. */
                maximumZones: number;
                /** @description The Edge DNS permissions that you have on this contract. */
                permissions: ("READ" | "WRITE" | "ADD" | "DELETE")[];
                /** @description The number of zones that currently exist on this contract. */
                zoneCount: number;
              })[];
          };
        };
      };
    };
  };
  /**
   * List DNSSEC algorithms
   * @description Retrieves a list of DNSSEC algorithm names.
   */
  "get-data-dns-sec-algorithms": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            algorithms: string[];
          };
        };
      };
    };
  };
  /**
   * List edge hostnames
   * @description Displays a list of Edge Hostnames that have been configured for the current customer.
   */
  "get-data-edgehostnames": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description This API uses edge hosts as the target of a Zone Apex Mapping or a Top-Level Redirect record. When using edge hosts as targets, only select hosts where `supportsZoneApexMapping` is `true`. */
            edgeHostnames: {
                /** @description The DNS name of this edge host. */
                edgeHostname: string;
                /** @description If `true`, you can use this edge host as the target of a Zone Apex Mapping record. */
                supportsZoneApexMapping: boolean;
              }[];
          };
        };
      };
    };
  };
  /**
   * List groups
   * @description Lists the groups accessible to the current user. Each Group object includes the list of contracts related to that group, as well as your permissions of `READ`, `WRITE`, `ADD`, or `DELETE` zone on that group.
   */
  "get-data-groups": {
    parameters: {
      query: {
        /**
         * @description The currently selected group ID. This is a feature in the Pulsar UI where a user is able to specify a particular group to manage.
         * @example {{gid}}
         */
        gid: number;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description Information about a customer group and associated permissions. */
            groups: ({
                /** @description The list of contract IDs that this group contains. */
                contractIds: string[];
                /** @description The group ID. */
                groupId: number;
                /** @description The name of this group. */
                groupName: string;
                /** @description Permissions that the current user has on this group: `ADD`, `DELETE`, `READ`, and `WRITE`. */
                permissions: ("READ" | "WRITE" | "ADD" | "DELETE")[];
              })[];
          };
        };
      };
    };
  };
  /**
   * List record types
   * @description Retrieves a list of record types you can add to the requested zone. Record types depend on both the zone type and the available contract features.
   */
  "get-record-set-types": {
    parameters: {
      query: {
        /**
         * @description The name of an Edge DNS zone.
         * @example {{zone}}
         */
        zone: string;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            types: string[];
          };
        };
      };
    };
  };
  /**
   * List TSIG key algorithms
   * @description Retrieves a list of TSIG algorithm names.
   */
  "get-data-tsig-algorithms": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            algorithms: string[];
          };
        };
      };
    };
  };
  /**
   * List TSIG keys
   * @description Get a list of the TSIG keys used by zones that you are allowed to manage.
   */
  "get-keys": {
    parameters: {
      query?: {
        /**
         * @description Limits the list to those keys belonging to the specified contracts. You can specify a comma-separated list with multiple contract IDs.
         * @example {{contractIds}}
         */
        contractIds?: string;
        /**
         * @description Limits the list to those keys whose key name or algorithm name contains the specified string.
         * @example {{search}}
         */
        search?: string;
        /**
         * @description Sorts the list on the specified fields. You can specify multiple fields as a comma-separated list. Placing a dash before a field name sorts it in descending order.
         * @example {{sortBy}}
         */
        sortBy?: string;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "application/json": {
            /** @description This block contains a list of keys that matched the request. */
            keys: ({
                /** @enum {string} */
                algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
                name: string;
                secret: string;
                /** @description The number of zones that reference this key. */
                zonesCount?: number;
              })[];
            /** @description This block contains information about the request, including any parameters, and the response, including its size. */
            metadata: {
              /** @description If the `contractIds` parameter was passed in, this field contains a list of contract IDs. */
              contracts?: string[];
              /** @description If the `gid` parameter was passed in, this field displays its value. */
              gid?: number;
              /** @description If the `search` parameter was passed in, this field displays its value. */
              search?: string;
              /** @description If the `sortBy` parameter was passed in, this field contains a list of the sorting fields. */
              sortBy?: string[];
              /** @description The total number of TSIG keys that matched the request parameters. */
              totalElements: number;
            };
          };
        };
      };
    };
  };
  /**
   * Update TSIG key for multiple zones
   * @description This updates the key data for multiple zones at once. Keep in mind that this operation can only add zones to a TSIG key, not remove them. To safely remove the association between a zone and a TSIG key, update the zone to its new TSIG key or remove the key from the zone if you're sure it's no longer needed.
   */
  "post-keys-bulk-update": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "zones": [
         *     "brook.com",
         *     "river.com"
         *   ],
         *   "key": {
         *     "algorithm": "hmac-sha512",
         *     "name": "brook.com.akamai.com.",
         *     "secret": "Ok1qR5IW1ajVka5cHPEJQIXfLyx5V3PSkFBROAzOn21JumDq6nIpoj6H8rfj5Uo+Ok55ZWQ0Wgrf302fDscHLw=="
         *   }
         * }
         */
        "application/json": {
          /** @description The TSIG key. */
          key: {
            /** @enum {string} */
            algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
            name: string;
            secret: string;
            /** @description The number of zones that reference this key. */
            zonesCount?: number;
          };
          /** @description A list of names of zones that should use the key. */
          zones: string[];
        };
      };
    };
    responses: {
      /** @description The operation was successful. No response data is returned. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * List zones using TSIG key
   * @description Returns a list of zone names that use the given TSIG key and for which the current user has READ access. If the list of zones returned is empty, it is possible that the given key is in use by other zones but the current user does not have permission to view those zones.
   */
  "post-keys-used-by": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "algorithm": "hmac-sha512",
         *   "name": "example.com.akamai.com.",
         *   "secret": "Ok1qR5IW1ajVka5cHPEJQIXfLyx5V3PSkFBROAzOn21JumDq6nIpoj6H8rfj5Uo+Ok55ZWQ0Wgrf302fDscHLw=="
         * }
         */
        "application/json": {
          /**
           * @description The algorithm used to encode the TSIG key's secret data.
           * @example {{algorithm}}
           * @enum {string}
           */
          algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
          /**
           * @description The name of the TSIG key. This is a name that's unique across all of Akamai's customers. Since the key name is treated like a DNS name, the value is lowercase and the server removes any trailing dots.
           * @example {{name}}
           */
          name: string;
          /**
           * @description A Base64-encoded string of data. When decoded, it needs to contain the correct number of bits for the chosen algorithm. If the input is not correctly padded, the server applies the padding.
           * @example {{secret}}
           */
          secret: string;
        };
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "application/json": {
            /** @description A list of zone names. */
            zones: string[];
          };
        };
      };
    };
  };
  /**
   * List zones
   * @description Get a list of all zones that the current user has access to manage. Includes the version identifier, propagation status, and SOA serial number for the most recently activated version. This operation is [paginated](https://techdocs.akamai.com/edge-dns/reference/use-pagination).
   */
  "get-zones": {
    parameters: {
      query?: {
        /**
         * @description Limits the list to those zones belonging to the specified contracts.
         * @example {{contractIds}}
         */
        contractIds?: string;
        /**
         * @description Limits the list to those zones whose name matches the specified search string.
         * @example {{search}}
         */
        search?: string;
        /**
         * @description Sorts the list on the specified fields. You can specify multiple fields as a comma-separated list. Placing a dash before a field name sorts it in descending order.  Valid sort keys include `zone`, `contractId`, `comment`, `endCustomerId`, `lastModifiedDate`, and `lastActivatedDate`.
         * @example {{sortBy}}
         */
        sortBy?: string;
        /**
         * @description If included, limits the list of Edge DNS zones where subzoneGrants matches the specified boolean.
         * @example {{subzoneGrant}}
         */
        subzoneGrant?: boolean;
        /**
         * @description If included, limits the list to one or more Edge DNS zone types,  `PRIMARY`, `SECONDARY`, or `ALIAS`. Multiple types may be specified as a comma-separated list.
         * @example {{types}}
         */
        types?: string;
        /**
         * @description Which page of results to return. The first page is page 1.
         * @example {{page}}
         */
        page?: number;
        /**
         * @description The number of results per page to return.
         * @example {{pageSize}}
         */
        pageSize?: number;
        /**
         * @description Disables paging and shows the entire list all at once. Using this parameter may significantly increase the time required to respond to the request.
         * @example {{showAll}}
         */
        showAll?: boolean;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    responses: {
      /** @description List of zones that you own. */
      200: {
        content: {
          "application/json": {
            /** @description Information about the request. */
            metadata: Record<string, never>;
            /** @description An Edge DNS zone. This object contains zone settings, but not record sets. */
            zones: ({
                /**
                 * @description The current status of zone activation.
                 * @enum {string}
                 */
                activationState: "NEW" | "PENDING_APPROVAL" | "ACTIVE" | "OBSOLETE" | "ERROR" | "LOCKED";
                /** @description For `PRIMARY` and `SECONDARY` zones only. The number of zones of type `ALIAS` that point to this zone. */
                aliasCount?: number;
                /** @description Free-form user comments. */
                comment?: string;
                /** @description The contract for this zone. */
                contractId: string;
                /** @description Free-form user identifier for this zone, often used by resellers. */
                endCustomerId?: string;
                /** @description For `PRIMARY` and `SECONDARY` zones only. An ISO 8601 timestamp indicating when the latest version was activated. */
                lastActivationDate?: string;
                /** @description The name of the user that last edited this zone. */
                lastModifiedBy: string;
                /** @description An ISO 8601 timestamp indicating when the zone was last modified. */
                lastModifiedDate: string;
                /** @description For `SECONDARY` zones only. The names or addresses of the customer's nameservers from which the zone data should be retrieved. */
                masters?: string[];
                /** @description Whether DNSSEC Sign&Serve is enabled. Applies to `PRIMARY` and `SECONDARY` zones only. */
                signAndServe?: boolean;
                /**
                 * @description The algorithm currently or last used for DNSSEC Sign&Serve. Absent if no algorithm has ever been assigned to this zone.
                 * @enum {string|null}
                 */
                signAndServeAlgorithm?: "RSA_SHA1" | "RSA_SHA256" | "RSA_SHA512" | "ECDSA_P256_SHA256" | "ECDSA_P384_SHA384" | null;
                /** @description Determines if cross-account subzones are enabled. This does not impact the ability to create subzones that you are presently authorized to edit. */
                subzoneGrants?: boolean;
                /** @description For `ALIAS` zones only. The name of the zone whose configuration this zone copies. */
                target?: string;
                /** @description For `SECONDARY` zones only. The TSIG key used for zone transfers. */
                tsigKey?: {
                  /** @enum {string} */
                  algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
                  name: string;
                  secret: string;
                  /** @description The number of zones that reference this key. */
                  zonesCount?: number;
                };
                /**
                 * @description The zone type. A `PRIMARY` zone's records are stored in the Akamai Portal. A `SECONDARY` zone's records are stored on the customer's nameservers. `ALIAS` zones allow users to duplicate the configuration of an existing zone.
                 * @enum {string}
                 */
                type: "PRIMARY" | "SECONDARY" | "ALIAS";
                /**
                 * Format: uuid
                 * @description The UUID of the most recently activated version. You can use this value as an `ETag` when performing operations that affect zones.
                 */
                versionId: string;
                /** @description The name of the zone. */
                zone: string;
              })[];
          };
        };
      };
    };
  };
  /**
   * Create a zone
   * @description Creates a new zone. Carefully review the documentation for which fields are relevant to the type of zone you are creating.
   */
  "post-zone": {
    parameters: {
      query: {
        /**
         * @description The contract to use for the new zone.
         * @example {{contractId}}
         */
        contractId: string;
        /**
         * @description The currently selected group ID. This is a feature in the Pulsar UI where a user is able to specify a particular group to manage.
         * @example {{gid}}
         */
        gid: number;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "comment": "Adding bodies of water",
         *   "type": "SECONDARY",
         *   "zone": "river.com",
         *   "masters": [
         *     "192.0.2.35",
         *     "192.0.2.67"
         *   ]
         * }
         */
        "application/json": {
          /**
           * @description Free-form user comments.
           * @example {{comment}}
           */
          comment?: string;
          /**
           * @description Free-form user identifier for this zone, often used by resellers.
           * @example {{endCustomerId}}
           */
          endCustomerId?: string;
          /** @description For `SECONDARY` zones only. The names or addresses of the customer's nameservers that the zone data should be retrieved from. */
          masters?: string[];
          /**
           * @description For `PRIMARY` and `SECONDARY` zones only. Indicates whether DNSSEC Sign&Serve enabled.
           * @example {{signAndServe}}
           */
          signAndServe?: boolean;
          /**
           * @description The algorithm currently or last used for DNSSEC Sign&Serve. Absent if no algorithm has ever been assigned to this zone.
           * @example {{signAndServeAlgorithm}}
           * @enum {string}
           */
          signAndServeAlgorithm?: "RSA_SHA1" | "RSA_SHA256" | "RSA_SHA512" | "ECDSA_P256_SHA256" | "ECDSA_P384_SHA384";
          /**
           * @description For `ALIAS` zones only. The name of the zone whose configuration this zone will copy.
           * @example {{target}}
           */
          target?: string;
          /** @description For `SECONDARY` zones only. The TSIG key used for zone transfers. */
          tsigKey?: {
            /** @enum {string} */
            algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
            name: string;
            secret: string;
            /** @description The number of zones that reference this key. */
            zonesCount?: number;
          };
          /**
           * @description The zone type. A `PRIMARY` zone's records are stored in the Akamai Portal. A `SECONDARY` zone's records are stored on the customer's nameservers. `ALIAS` zones allow users to duplicate the configuration of an existing zone.
           * @example {{type}}
           * @enum {string}
           */
          type: "PRIMARY" | "SECONDARY" | "ALIAS";
          /**
           * @description The name of the zone.
           * @example {{zone}}
           */
          zone: string;
        };
      };
    };
    responses: {
      /** @description Successful response. */
      201: {
        headers: {
          /** @description Provides a URL path you can GET the newly created resource from. */
          Location?: string;
        };
        content: {
          "application/json": {
            /**
             * @description The current status of zone activation.
             * @enum {string}
             */
            activationState: "NEW" | "PENDING_APPROVAL" | "ACTIVE" | "OBSOLETE" | "ERROR" | "LOCKED";
            /** @description For `PRIMARY` and `SECONDARY` zones only. The number of zones of type `ALIAS` that point to this zone. */
            aliasCount?: number;
            /** @description Free-form user comments. */
            comment?: string;
            /** @description The contract for this zone. */
            contractId: string;
            /** @description Free-form user identifier for this zone, often used by resellers. */
            endCustomerId?: string;
            /** @description For `PRIMARY` and `SECONDARY` zones only. An ISO 8601 timestamp indicating when the latest version was activated. */
            lastActivationDate?: string;
            /** @description The name of the user that last edited this zone. */
            lastModifiedBy: string;
            /** @description An ISO 8601 timestamp indicating when the zone was last modified. */
            lastModifiedDate: string;
            /** @description For `SECONDARY` zones only. The names or addresses of the customer's nameservers from which the zone data should be retrieved. */
            masters?: string[];
            /** @description Whether DNSSEC Sign&Serve is enabled. Applies to `PRIMARY` and `SECONDARY` zones only. */
            signAndServe?: boolean;
            /**
             * @description The algorithm currently or last used for DNSSEC Sign&Serve. Absent if no algorithm has ever been assigned to this zone.
             * @enum {string|null}
             */
            signAndServeAlgorithm?: "RSA_SHA1" | "RSA_SHA256" | "RSA_SHA512" | "ECDSA_P256_SHA256" | "ECDSA_P384_SHA384" | null;
            /** @description Determines if cross-account subzones are enabled. This does not impact the ability to create subzones that you are presently authorized to edit. */
            subzoneGrants?: boolean;
            /** @description For `ALIAS` zones only. The name of the zone whose configuration this zone copies. */
            target?: string;
            /** @description For `SECONDARY` zones only. The TSIG key used for zone transfers. */
            tsigKey?: {
              /** @enum {string} */
              algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
              name: string;
              secret: string;
              /** @description The number of zones that reference this key. */
              zonesCount?: number;
            };
            /**
             * @description The zone type. A `PRIMARY` zone's records are stored in the Akamai Portal. A `SECONDARY` zone's records are stored on the customer's nameservers. `ALIAS` zones allow users to duplicate the configuration of an existing zone.
             * @enum {string}
             */
            type: "PRIMARY" | "SECONDARY" | "ALIAS";
            /**
             * Format: uuid
             * @description The UUID of the most recently activated version. You can use this value as an `ETag` when performing operations that affect zones.
             */
            versionId: string;
            /** @description The name of the zone. */
            zone: string;
          };
        };
      };
    };
  };
  /**
   * Get zone's settings
   * @description Retrieves the metadata for this zone. Does not include record sets.
   */
  "get-zone": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /**
             * @description The current status of zone activation.
             * @enum {string}
             */
            activationState: "NEW" | "PENDING_APPROVAL" | "ACTIVE" | "OBSOLETE" | "ERROR" | "LOCKED";
            /** @description For `PRIMARY` and `SECONDARY` zones only. The number of zones of type `ALIAS` that point to this zone. */
            aliasCount?: number;
            /** @description Free-form user comments. */
            comment?: string;
            /** @description The contract for this zone. */
            contractId: string;
            /** @description Free-form user identifier for this zone, often used by resellers. */
            endCustomerId?: string;
            /** @description For `PRIMARY` and `SECONDARY` zones only. An ISO 8601 timestamp indicating when the latest version was activated. */
            lastActivationDate?: string;
            /** @description The name of the user that last edited this zone. */
            lastModifiedBy: string;
            /** @description An ISO 8601 timestamp indicating when the zone was last modified. */
            lastModifiedDate: string;
            /** @description For `SECONDARY` zones only. The names or addresses of the customer's nameservers from which the zone data should be retrieved. */
            masters?: string[];
            /** @description Whether DNSSEC Sign&Serve is enabled. Applies to `PRIMARY` and `SECONDARY` zones only. */
            signAndServe?: boolean;
            /**
             * @description The algorithm currently or last used for DNSSEC Sign&Serve. Absent if no algorithm has ever been assigned to this zone.
             * @enum {string|null}
             */
            signAndServeAlgorithm?: "RSA_SHA1" | "RSA_SHA256" | "RSA_SHA512" | "ECDSA_P256_SHA256" | "ECDSA_P384_SHA384" | null;
            /** @description Determines if cross-account subzones are enabled. This does not impact the ability to create subzones that you are presently authorized to edit. */
            subzoneGrants?: boolean;
            /** @description For `ALIAS` zones only. The name of the zone whose configuration this zone copies. */
            target?: string;
            /** @description For `SECONDARY` zones only. The TSIG key used for zone transfers. */
            tsigKey?: {
              /** @enum {string} */
              algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
              name: string;
              secret: string;
              /** @description The number of zones that reference this key. */
              zonesCount?: number;
            };
            /**
             * @description The zone type. A `PRIMARY` zone's records are stored in the Akamai Portal. A `SECONDARY` zone's records are stored on the customer's nameservers. `ALIAS` zones allow users to duplicate the configuration of an existing zone.
             * @enum {string}
             */
            type: "PRIMARY" | "SECONDARY" | "ALIAS";
            /**
             * Format: uuid
             * @description The UUID of the most recently activated version. You can use this value as an `ETag` when performing operations that affect zones.
             */
            versionId: string;
            /** @description The name of the zone. */
            zone: string;
          };
        };
      };
    };
  };
  /**
   * Update zone's settings
   * @description Modifies a zone. You can't change the zone `type` with this operation.
   */
  "put-zone": {
    parameters: {
      query: {
        /**
         * @description If set to true, skips safety checks when disabling sign and serve.
         * @example {{skipSignAndServeSafetyCheck}}
         */
        skipSignAndServeSafetyCheck: boolean;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "comment": "Adding bodies of water",
         *   "type": "SECONDARY",
         *   "zone": "river.com",
         *   "masters": [
         *     "192.0.2.131",
         *     "192.0.2.164"
         *   ]
         * }
         */
        "application/json": {
          /**
           * @description Free-form user comments.
           * @example {{comment}}
           */
          comment?: string;
          /**
           * @description The contract for this zone.
           * @example {{contractId}}
           */
          contractId?: string;
          /**
           * @description Free-form user identifier for this zone, often used by resellers.
           * @example {{endCustomerId}}
           */
          endCustomerId?: string;
          /** @description For `SECONDARY` zones only. The names or addresses of the customer's nameservers from which the zone data should be retrieved. */
          masters?: string[];
          /**
           * @description Whether DNSSEC Sign&Serve is enabled. Applies to `PRIMARY` and `SECONDARY` zones only.
           * @example {{signAndServe}}
           */
          signAndServe?: boolean;
          /**
           * @description The algorithm currently or last used for DNSSEC Sign&Serve. Absent if no algorithm has ever been assigned to this zone.
           * @example {{signAndServeAlgorithm}}
           * @enum {string}
           */
          signAndServeAlgorithm?: "RSA_SHA1" | "RSA_SHA256" | "RSA_SHA512" | "ECDSA_P256_SHA256" | "ECDSA_P384_SHA384";
          /**
           * @description Determines if cross-account subzones are enabled. This does not impact the ability to create subzones that you are presently authorized to edit.
           * @example {{subzoneGrants}}
           */
          subzoneGrants?: boolean;
          /**
           * @description For `ALIAS` zones only. The name of the zone whose configuration this zone copies.
           * @example {{target}}
           */
          target?: string;
          /** @description For `SECONDARY` zones only. The TSIG key used for zone transfers. */
          tsigKey?: {
            /** @enum {string} */
            algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
            name: string;
            secret: string;
            /** @description The number of zones that reference this key. */
            zonesCount?: number;
          };
          /**
           * @description The zone type. A `PRIMARY` zone's records are stored in the Akamai Portal. A `SECONDARY` zone's records are stored on the customer's nameservers. `ALIAS` zones allow users to duplicate the configuration of an existing zone.
           * @example {{type}}
           * @enum {string}
           */
          type: "PRIMARY" | "SECONDARY" | "ALIAS";
          /**
           * @description The name of the zone.
           * @example {{zone}}
           */
          zone: string;
        };
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /**
             * @description The current status of zone activation.
             * @enum {string}
             */
            activationState: "NEW" | "PENDING_APPROVAL" | "ACTIVE" | "OBSOLETE" | "ERROR" | "LOCKED";
            /** @description For `PRIMARY` and `SECONDARY` zones only. The number of zones of type `ALIAS` that point to this zone. */
            aliasCount?: number;
            /** @description Free-form user comments. */
            comment?: string;
            /** @description The contract for this zone. */
            contractId: string;
            /** @description Free-form user identifier for this zone, often used by resellers. */
            endCustomerId?: string;
            /** @description For `PRIMARY` and `SECONDARY` zones only. An ISO 8601 timestamp indicating when the latest version was activated. */
            lastActivationDate?: string;
            /** @description The name of the user that last edited this zone. */
            lastModifiedBy: string;
            /** @description An ISO 8601 timestamp indicating when the zone was last modified. */
            lastModifiedDate: string;
            /** @description For `SECONDARY` zones only. The names or addresses of the customer's nameservers from which the zone data should be retrieved. */
            masters?: string[];
            /** @description Whether DNSSEC Sign&Serve is enabled. Applies to `PRIMARY` and `SECONDARY` zones only. */
            signAndServe?: boolean;
            /**
             * @description The algorithm currently or last used for DNSSEC Sign&Serve. Absent if no algorithm has ever been assigned to this zone.
             * @enum {string|null}
             */
            signAndServeAlgorithm?: "RSA_SHA1" | "RSA_SHA256" | "RSA_SHA512" | "ECDSA_P256_SHA256" | "ECDSA_P384_SHA384" | null;
            /** @description Determines if cross-account subzones are enabled. This does not impact the ability to create subzones that you are presently authorized to edit. */
            subzoneGrants?: boolean;
            /** @description For `ALIAS` zones only. The name of the zone whose configuration this zone copies. */
            target?: string;
            /** @description For `SECONDARY` zones only. The TSIG key used for zone transfers. */
            tsigKey?: {
              /** @enum {string} */
              algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
              name: string;
              secret: string;
              /** @description The number of zones that reference this key. */
              zonesCount?: number;
            };
            /**
             * @description The zone type. A `PRIMARY` zone's records are stored in the Akamai Portal. A `SECONDARY` zone's records are stored on the customer's nameservers. `ALIAS` zones allow users to duplicate the configuration of an existing zone.
             * @enum {string}
             */
            type: "PRIMARY" | "SECONDARY" | "ALIAS";
            /**
             * Format: uuid
             * @description The UUID of the most recently activated version. You can use this value as an `ETag` when performing operations that affect zones.
             */
            versionId: string;
            /** @description The name of the zone. */
            zone: string;
          };
        };
      };
    };
  };
  /**
   * Get zone's aliases
   * @description Show all zones that alias to this zone.
   */
  "get-zone-aliases": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description A list of zone names. */
            aliases: string[];
          };
        };
      };
    };
  };
  /**
   * Get zone's contract
   * @description Show data about the contract to which this zone belongs.
   */
  "get-zone-contract": {
    parameters: {
      query: {
        /**
         * @description The currently selected group ID. This is a feature in the Pulsar UI where a user is able to specify a particular group to manage.
         * @example {{gid}}
         */
        gid: number;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description The ID of the contract. */
            contractId: string;
            /** @description The name of the customer associated with this contract. */
            contractName: string;
            /** @description An internal description of the contract type. */
            contractTypeName: string;
            /** @description Edge DNS features that you have access to. */
            features: ("ALIAS_ZONES" | "DNSSEC_SELF_SIGN" | "DNSSEC_SIGN_AND_SERVE" | "FORCE_DELETE" | "PRIMARY_ZONES" | "SECONDARY_ZONES" | "ZONE_APEX_MAPPING" | "TLD_ZONES" | "SUBZONE_GRANTS")[];
            /** @description The maximum number of zones you are able to create on this contract. */
            maximumZones: number;
            /** @description The Edge DNS permissions that you have on this contract. */
            permissions: ("READ" | "WRITE" | "ADD" | "DELETE")[];
            /** @description The number of zones that currently exist on this contract. */
            zoneCount: number;
          };
        };
      };
    };
  };
  /**
   * Get zone's TSIG key
   * @description Retrieves the TSIG Key data for this zone. Includes a count of zones that use this key. Returns a 404 error if the zone does not have a TSIG key.
   */
  "get-zones-zone-key": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "application/json": {
            /** @enum {string} */
            algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
            name: string;
            secret: string;
            /** @description The number of zones that reference this key. */
            zonesCount?: number;
          };
        };
      };
    };
  };
  /**
   * Update zone's TSIG key
   * @description Creates or replaces the current TSIG Key for this zone. If other zones use the same key, does not modify those zones.
   */
  "put-zones-zone-key": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "algorithm": "hmac-sha512",
         *   "name": "example.com.akamai.com.",
         *   "secret": "Ok1qR5IW1ajVka5cHPEJQIXfLyx5V3PSkFBROAzOn21JumDq6nIpoj6H8rfj5Uo+Ok55ZWQ0Wgrf302fDscHLw=="
         * }
         */
        "application/json": {
          /**
           * @description The algorithm used to encode the TSIG key's secret data.
           * @example {{algorithm}}
           * @enum {string}
           */
          algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
          /**
           * @description The name of the TSIG key. This is a name that's unique across all of Akamai's customers. Since the key name is treated like a DNS name, the value is lowercase and the server removes any trailing dots.
           * @example {{name}}
           */
          name: string;
          /**
           * @description A Base64-encoded string of data. When decoded, it needs to contain the correct number of bits for the chosen algorithm. If the input is not correctly padded, the server applies the padding.
           * @example {{secret}}
           */
          secret: string;
        };
      };
    };
    responses: {
      /** @description The operation was successful. No response data is returned. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * Delete zone's TSIG key
   * @description Removes the TSIG Key for this zone. This action does not affect any other zone, even if they share the same TSIG key as this zone. If the zone does not currently have a key, no actions are taken and no error is thrown.
   */
  "delete-zones-zone-key": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description The operation was successful. No response data is returned. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * List users of zone's TSIG key
   * @description Lists the Zones that use the same TSIG key as this zone.
   */
  "get-zones-zone-key-used-by": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "application/json": {
            /** @description A list of zone names. */
            zones: string[];
          };
        };
      };
    };
  };
  /**
   * Get record set names for zone
   * @description Retrieves a list of record set names for a zone.
   */
  "get-zone-names": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description A list of record names. */
            names: string[];
          };
        };
      };
    };
  };
  /**
   * Get record set types for name and zone
   * @description Lists all *existing* Record set types for this name. The list of *allowed* types is available at [List record types](https://techdocs.akamai.com/edge-dns/reference/get-record-set-types). If the name does not exist within the zone, an empty list is returned.
   */
  "get-zone-name-types": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description A domain name, including the parent zone.
         * @example {{name}}
         */
        name: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description A list of record types. */
            types: string[];
          };
        };
      };
    };
  };
  /**
   * Get a record set
   * @description Retrieves a single record set for the zone, record name, and record type specified in the URL.
   */
  "get-zone-name-type": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The record set type.
         * @example {{type}}
         */
        type: string;
        /**
         * @description A domain name, including the parent zone.
         * @example {{name}}
         */
        name: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "application/json": {
            /** @description The fully qualified domain name (FQDN) of this record. */
            name: string;
            /** @description An array of strings. Each string encodes the rdata for a single record. If you want to have three A records, you need three strings in the array. Each string is encoded in master file format. RFC 1035 defines master file format for most record types. */
            rdata: string[];
            /** @description The number of seconds that this record should live in a resolver's cache before being refetched. */
            ttl: number;
            /** @description The record type. */
            type: string;
          };
        };
      };
    };
  };
  /**
   * Replace a record set
   * @description Replaces an existing Record set with the request body. The `name` and `type` need to match the existing record.
   */
  "put-zones-zone-names-name-types-type": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The record set type.
         * @example {{type}}
         */
        type: string;
        /**
         * @description A domain name, including the parent zone.
         * @example {{name}}
         */
        name: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "name": "www.example.com",
         *   "ttl": 300,
         *   "type": "A",
         *   "rdata": [
         *     "192.0.2.35",
         *     "192.0.2.111"
         *   ]
         * }
         */
        "application/json": {
          /**
           * @description The fully qualified domain name (FQDN) of this record.
           * @example {{name}}
           */
          name: string;
          /** @description An array of strings. Each string encodes the rdata for a single record. If you want to have three A records, you need three strings in the array. Each string is encoded in master file format. RFC 1035 defines master file format for most record types. */
          rdata: string[];
          /**
           * @description The number of seconds that this record should live in a resolver's cache before being refetched.
           * @example {{ttl}}
           */
          ttl: number;
          /**
           * @description The record type.
           * @example {{type}}
           */
          type: string;
        };
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "application/json": {
            /** @description The fully qualified domain name (FQDN) of this record. */
            name: string;
            /** @description An array of strings. Each string encodes the rdata for a single record. If you want to have three A records, you need three strings in the array. Each string is encoded in master file format. RFC 1035 defines master file format for most record types. */
            rdata: string[];
            /** @description The number of seconds that this record should live in a resolver's cache before being refetched. */
            ttl: number;
            /** @description The record type. */
            type: string;
          };
        };
      };
    };
  };
  /**
   * Create a record set
   * @description Creates a new Record set with the specified name and type.
   */
  "post-zones-zone-names-name-types-type": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The record set type.
         * @example {{type}}
         */
        type: string;
        /**
         * @description A domain name, including the parent zone.
         * @example {{name}}
         */
        name: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "name": "www.example.com",
         *   "ttl": 300,
         *   "type": "A",
         *   "rdata": [
         *     "192.0.2.52",
         *     "192.0.2.139"
         *   ]
         * }
         */
        "application/json": {
          /**
           * @description The fully qualified domain name (FQDN) of this record.
           * @example {{name}}
           */
          name: string;
          /** @description An array of strings. Each string encodes the rdata for a single record. If you want to have three A records, you need three strings in the array. Each string is encoded in master file format. RFC 1035 defines master file format for most record types. */
          rdata: string[];
          /**
           * @description The number of seconds that this record should live in a resolver's cache before being refetched.
           * @example {{ttl}}
           */
          ttl: number;
          /**
           * @description The record type.
           * @example {{type}}
           */
          type: string;
        };
      };
    };
    responses: {
      /** @description Successful operation. */
      201: {
        headers: {
          /** @description Provides a URL path you can GET the newly created resource from. */
          Location?: string;
        };
        content: {
          "application/json": {
            /** @description The fully qualified domain name (FQDN) of this record. */
            name: string;
            /** @description An array of strings. Each string encodes the rdata for a single record. If you want to have three A records, you need three strings in the array. Each string is encoded in master file format. RFC 1035 defines master file format for most record types. */
            rdata: string[];
            /** @description The number of seconds that this record should live in a resolver's cache before being refetched. */
            ttl: number;
            /** @description The record type. */
            type: string;
          };
        };
      };
    };
  };
  /**
   * Delete a record set
   * @description Removes an existing record set.
   */
  "delete-zone-name-type": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The record set type.
         * @example {{type}}
         */
        type: string;
        /**
         * @description A domain name, including the parent zone.
         * @example {{name}}
         */
        name: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * Get zone's record sets
   * @description Lists all Record Sets for this Zone. It works only for `PRIMARY` and `SECONDARY` zones. This operation is [paginated](https://techdocs.akamai.com/edge-dns/reference/pagination).
   */
  "get-zones-zone-recordsets": {
    parameters: {
      query?: {
        /**
         * @description Sorts the list on the specified fields. You can specify multiple fields as a comma-separated list. Placing a dash before a field name sorts it in descending order. Allowed fields include `name` and `type`.
         * @example {{sortBy}}
         */
        sortBy?: string;
        /**
         * @description Displays only record sets that match one of the provided types. Specifies multiple fields as a comma-separated list. Ignores illegal or disallowed record types.
         * @example {{types}}
         */
        types?: string;
        /**
         * @description Displays only record sets whose NAME or RDATA field matches this value. The entire record set, that is all records with the same name and type are shown if any record in the set has a NAME or RDATA that matches the value case-insensitively.
         * @example {{search}}
         */
        search?: string;
        /**
         * @description Which page of results to return. The first page is page 1.
         * @example {{page}}
         */
        page?: number;
        /**
         * @description The number of results per page to return.
         * @example {{pageSize}}
         */
        pageSize?: number;
        /**
         * @description Disables paging and shows the entire list all at once. Using this parameter may significantly increase the time required to respond to the request.
         * @example {{showAll}}
         */
        showAll?: boolean;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "application/json": {
            /** @description Information about the request. */
            metadata: {
              /** @description Current page. */
              page: number;
              /** @description The number of results per page. */
              pageSize: number;
              /** @description The total number of results. */
              totalElements: number;
              /** @description Reflects the set of record types that were requested. */
              types: string[];
              /** @description The name of the zone. */
              zone: string;
            };
            /** @description A list of one or more recordsets. */
            recordsets: {
                /** @description The fully qualified domain name (FQDN) of this record. */
                name: string;
                /** @description An array of strings. Each string encodes the rdata for a single record. If you want to have three A records, you need three strings in the array. Each string is encoded in master file format. RFC 1035 defines master file format for most record types. */
                rdata: string[];
                /** @description The number of seconds that this record should live in a resolver's cache before being refetched. */
                ttl: number;
                /** @description The record type. */
                type: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * Replace record sets
   * @description Replaces the entire list of Record Sets that currently exists with the list provided.
   */
  "put-zones-zone-recordsets": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "recordsets": [
         *     {
         *       "name": "paveldespot.com",
         *       "ttl": 86400,
         *       "type": "SOA",
         *       "rdata": [
         *         "a33-33.akam.net. hostmaster.akamai.com. 14643123442 43200 7200 604800 7200"
         *       ]
         *     },
         *     {
         *       "name": "paveldespot.com",
         *       "ttl": 20,
         *       "type": "AKAMAICDN",
         *       "rdata": [
         *         "example3.paveldespot.net.edgekey.net"
         *       ]
         *     },
         *     {
         *       "name": "paveldespot.com",
         *       "ttl": 172800,
         *       "type": "NS",
         *       "rdata": [
         *         "ns222.name.cloud.ibm.com.",
         *         "ns111.name.cloud.ibm.com."
         *       ]
         *     },
         *     {
         *       "name": "api1.paveldespot.com",
         *       "ttl": 300,
         *       "type": "CNAME",
         *       "rdata": [
         *         "api2.paveldespot.com."
         *       ]
         *     },
         *     {
         *       "name": "api2.paveldespot.com",
         *       "ttl": 300,
         *       "type": "CNAME",
         *       "rdata": [
         *         "api.paveldespot.com."
         *       ]
         *     },
         *     {
         *       "name": "api3.paveldespot.com",
         *       "ttl": 300,
         *       "type": "CNAME",
         *       "rdata": [
         *         "api.paveldespot.com."
         *       ]
         *     },
         *     {
         *       "name": "api4.paveldespot.com",
         *       "ttl": 300,
         *       "type": "CNAME",
         *       "rdata": [
         *         "api.paveldespot.com."
         *       ]
         *     },
         *     {
         *       "name": "roubrobin.paveldespot.com",
         *       "ttl": 30,
         *       "type": "A",
         *       "rdata": [
         *         "192.0.2.66",
         *         "192.0.2.66",
         *         "192.0.2.103",
         *         "192.0.2.20"
         *       ]
         *     }
         *   ]
         * }
         */
        "application/json": {
          /** @description A set of one or more resource records that share the same name, type, and TTL. */
          recordsets: {
              /** @description The fully qualified domain name (FQDN) of this record. */
              name: string;
              /** @description An array of strings. Each string encodes the rdata for a single record. If you want to have three A records, you need three strings in the array. Each string is encoded in master file format. RFC 1035 defines master file format for most record types. */
              rdata: string[];
              /** @description The number of seconds that this record should live in a resolver's cache before being refetched. */
              ttl: number;
              /** @description The record type. */
              type: string;
            }[];
        };
      };
    };
    responses: {
      /** @description Successful operation. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * Create multiple record sets
   * @description Creates multiple new Record Sets on this Zone. If any record set fails to create, for example, because a record set with that name and type already exists, the entire operation fails.
   */
  "post-zones-zone-recordsets": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "recordsets": [
         *     {
         *       "name": "new.example.com",
         *       "ttl": 300,
         *       "type": "CNAME",
         *       "rdata": [
         *         "www.example.com"
         *       ]
         *     }
         *   ]
         * }
         */
        "application/json": {
          /** @description A set of one or more resource records that share the same name, type, and TTL. */
          recordsets: {
              /** @description The fully qualified domain name (FQDN) of this record. */
              name: string;
              /** @description An array of strings. Each string encodes the rdata for a single record. If you want to have three A records, you need three strings in the array. Each string is encoded in master file format. RFC 1035 defines master file format for most record types. */
              rdata: string[];
              /** @description The number of seconds that this record should live in a resolver's cache before being refetched. */
              ttl: number;
              /** @description The record type. */
              type: string;
            }[];
        };
      };
    };
    responses: {
      /** @description Successful operation. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * List zone's versions
   * @description Shows the settings for current and prior versions of this Zone, in reverse chronological order of modification. Many versions in this list may look very similar because a new version is created every time the zone's settings or record sets are changed. This operation is [paginated](https://techdocs.akamai.com/edge-dns/reference/use-pagination).
   */
  "get-zone-versions": {
    parameters: {
      query?: {
        /**
         * @description Which page of results to return. The first page is page 1.
         * @example {{page}}
         */
        page?: number;
        /**
         * @description The number of results per page to return.
         * @example {{pageSize}}
         */
        pageSize?: number;
        /**
         * @description Disables paging and shows the entire list all at once. Using this parameter may significantly increase the time required to respond to the request.
         * @example {{showAll}}
         */
        showAll?: boolean;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description Information about the request. */
            metadata: Record<string, never>;
            /** @description A list of Edge DNS zones. Each object contains zone settings, but not record sets. */
            versions: ({
                /**
                 * @description The current status of zone activation.
                 * @enum {string}
                 */
                activationState: "NEW" | "PENDING_APPROVAL" | "ACTIVE" | "OBSOLETE" | "ERROR" | "LOCKED";
                /** @description For `PRIMARY` and `SECONDARY` zones only. The number of zones of type `ALIAS` that point to this zone. */
                aliasCount?: number;
                /** @description Free-form user comments. */
                comment?: string;
                /** @description The contract for this zone. */
                contractId: string;
                /** @description Free-form user identifier for this zone, often used by resellers. */
                endCustomerId?: string;
                /** @description For `PRIMARY` and `SECONDARY` zones only. An ISO 8601 timestamp indicating when the latest version was activated. */
                lastActivationDate?: string;
                /** @description The name of the user that last edited this zone. */
                lastModifiedBy: string;
                /** @description An ISO 8601 timestamp indicating when the zone was last modified. */
                lastModifiedDate: string;
                /** @description For `SECONDARY` zones only. The names or addresses of the customer's nameservers from which the zone data should be retrieved. */
                masters?: string[];
                /** @description Whether DNSSEC Sign&Serve is enabled. Applies to `PRIMARY` and `SECONDARY` zones only. */
                signAndServe?: boolean;
                /**
                 * @description The algorithm currently or last used for DNSSEC Sign&Serve. Absent if no algorithm has ever been assigned to this zone.
                 * @enum {string|null}
                 */
                signAndServeAlgorithm?: "RSA_SHA1" | "RSA_SHA256" | "RSA_SHA512" | "ECDSA_P256_SHA256" | "ECDSA_P384_SHA384" | null;
                /** @description Determines if cross-account subzones are enabled. This does not impact the ability to create subzones that you are presently authorized to edit. */
                subzoneGrants?: boolean;
                /** @description For `ALIAS` zones only. The name of the zone whose configuration this zone copies. */
                target?: string;
                /** @description For `SECONDARY` zones only. The TSIG key used for zone transfers. */
                tsigKey?: {
                  /** @enum {string} */
                  algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
                  name: string;
                  secret: string;
                  /** @description The number of zones that reference this key. */
                  zonesCount?: number;
                };
                /**
                 * @description The zone type. A `PRIMARY` zone's records are stored in the Akamai Portal. A `SECONDARY` zone's records are stored on the customer's nameservers. `ALIAS` zones allow users to duplicate the configuration of an existing zone.
                 * @enum {string}
                 */
                type: "PRIMARY" | "SECONDARY" | "ALIAS";
                /**
                 * Format: uuid
                 * @description The UUID of the most recently activated version. You can use this value as an `ETag` when performing operations that affect zones.
                 */
                versionId: string;
                /** @description The name of the zone. */
                zone: string;
              })[];
          };
        };
      };
    };
  };
  /**
   * Get zone version
   * @description Returns an image of the Zone from a previous version. Shows only zone settings, not record sets.
   */
  "get-zone-versions-uuid": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description A UUID indicating a zone version tag.
         * @example {{uuid}}
         */
        uuid: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /**
             * @description The current status of zone activation.
             * @enum {string}
             */
            activationState: "NEW" | "PENDING_APPROVAL" | "ACTIVE" | "OBSOLETE" | "ERROR" | "LOCKED";
            /** @description For `PRIMARY` and `SECONDARY` zones only. The number of zones of type `ALIAS` that point to this zone. */
            aliasCount?: number;
            /** @description Free-form user comments. */
            comment?: string;
            /** @description The contract for this zone. */
            contractId: string;
            /** @description Free-form user identifier for this zone, often used by resellers. */
            endCustomerId?: string;
            /** @description For `PRIMARY` and `SECONDARY` zones only. An ISO 8601 timestamp indicating when the latest version was activated. */
            lastActivationDate?: string;
            /** @description The name of the user that last edited this zone. */
            lastModifiedBy: string;
            /** @description An ISO 8601 timestamp indicating when the zone was last modified. */
            lastModifiedDate: string;
            /** @description For `SECONDARY` zones only. The names or addresses of the customer's nameservers from which the zone data should be retrieved. */
            masters?: string[];
            /** @description Whether DNSSEC Sign&Serve is enabled. Applies to `PRIMARY` and `SECONDARY` zones only. */
            signAndServe?: boolean;
            /**
             * @description The algorithm currently or last used for DNSSEC Sign&Serve. Absent if no algorithm has ever been assigned to this zone.
             * @enum {string|null}
             */
            signAndServeAlgorithm?: "RSA_SHA1" | "RSA_SHA256" | "RSA_SHA512" | "ECDSA_P256_SHA256" | "ECDSA_P384_SHA384" | null;
            /** @description Determines if cross-account subzones are enabled. This does not impact the ability to create subzones that you are presently authorized to edit. */
            subzoneGrants?: boolean;
            /** @description For `ALIAS` zones only. The name of the zone whose configuration this zone copies. */
            target?: string;
            /** @description For `SECONDARY` zones only. The TSIG key used for zone transfers. */
            tsigKey?: {
              /** @enum {string} */
              algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
              name: string;
              secret: string;
              /** @description The number of zones that reference this key. */
              zonesCount?: number;
            };
            /**
             * @description The zone type. A `PRIMARY` zone's records are stored in the Akamai Portal. A `SECONDARY` zone's records are stored on the customer's nameservers. `ALIAS` zones allow users to duplicate the configuration of an existing zone.
             * @enum {string}
             */
            type: "PRIMARY" | "SECONDARY" | "ALIAS";
            /**
             * Format: uuid
             * @description The UUID of the most recently activated version. You can use this value as an `ETag` when performing operations that affect zones.
             */
            versionId: string;
            /** @description The name of the zone. */
            zone: string;
          };
        };
      };
    };
  };
  /**
   * Get version's record sets
   * @description Lists all record sets for this version of this zone. This operation is [paginated](https://techdocs.akamai.com/edge-dns/reference/use-pagination).
   */
  "get-zone-versions-recordsets": {
    parameters: {
      query?: {
        /**
         * @description Sorts the list on the specified fields. You can specify multiple fields as a comma-separated list. Placing a dash before a field name sorts it in descending order. Allowed fields include `name` and `type`.
         * @example {{sortBy}}
         */
        sortBy?: string;
        /**
         * @description Displays only record sets that match one of the provided types. Specifies multiple fields as a comma-separated list. Ignores illegal or disallowed record types.
         * @example {{types}}
         */
        types?: string;
        /**
         * @description Display only record sets whose RDATA field matches this value. The entire record set, that is all records with the same name and type, displays if any record in the set has RDATA that matches the supplied value.
         * @example {{search}}
         */
        search?: string;
        /**
         * @description Which page of results to return. The first page is page 1.
         * @example {{page}}
         */
        page?: number;
        /**
         * @description The number of results per page to return.
         * @example {{pageSize}}
         */
        pageSize?: number;
        /**
         * @description Disables paging and shows the entire list all at once. Using this parameter may significantly increase the time required to respond to the request.
         * @example {{showAll}}
         */
        showAll?: boolean;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description A UUID indicating a zone version tag.
         * @example {{uuid}}
         */
        uuid: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description Information about the request. */
            metadata: {
              /** @description Current page. */
              page: number;
              /** @description The number of results per page. */
              pageSize: number;
              /** @description The total number of results. */
              totalElements: number;
              /** @description Reflects the set of record types that were requested. */
              types: string[];
              /** @description The name of the zone. */
              zone: string;
            };
            /** @description A list of one or more recordsets. */
            recordsets: {
                /** @description The fully qualified domain name (FQDN) of this record. */
                name: string;
                /** @description An array of strings. Each string encodes the rdata for a single record. If you want to have three A records, you need three strings in the array. Each string is encoded in master file format. RFC 1035 defines master file format for most record types. */
                rdata: string[];
                /** @description The number of seconds that this record should live in a resolver's cache before being refetched. */
                ttl: number;
                /** @description The record type. */
                type: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * Reactivate version
   * @description Create and activate a new version of the zone by copying the record sets from a prior version of this zone and reapplying them to the current version. The new version has a new, auto-incremented SOA serial number, and the zone's modification data is set to the current time and user. All other zone settings remain the same as the current version.
   */
  "post-zones-zone-versions-uuid-recordsets-activate": {
    parameters: {
      query?: {
        /**
         * @description A new comment string that may be blank. If not included, the old comment is copied.
         * @example {{comment}}
         */
        comment?: string;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description A UUID indicating a zone version tag.
         * @example {{uuid}}
         */
        uuid: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description The operation was successful. No response data is returned. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * Get version's master zone file
   * @description Downloads the record sets from a prior zone version in [master zone file](https://techdocs.akamai.com/edge-dns/reference/get-zone-file) format. This applies to primary zones and secondary zones.
   */
  "get-zones-zone-versions-uuid-zone-file": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description A UUID indicating a zone version tag.
         * @example {{uuid}}
         */
        uuid: string;
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "text/dns": string;
        };
      };
    };
  };
  /**
   * Show differences
   * @description Displays the [difference](https://techdocs.akamai.com/edge-dns/reference/get-zone-versions-diff) between any two versions of a zone, as specified in the query parameters.
   */
  "get-zone-versions-diff": {
    parameters: {
      query: {
        /**
         * @description UUID for "base" version.
         * @example {{from}}
         */
        from: string;
        /**
         * @description UUID of version to diff against base version.
         * @example {{to}}
         */
        to: string;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description Collections of differences between the two versions. */
            diffs: {
              /** @description A collection of record sets that have changed between two versions. */
              recordSetDiffs?: ({
                  /** @description The prior value of the settings field or record set. This may be any type of data, depending on the field that changed. The value will not exist on an `ADD` difference. */
                  fromValue?: boolean | number | Record<string, never> | string | null;
                  /** @description The name of the record set that changed. */
                  name: string;
                  /**
                   * @description The type of difference. An `ADD` difference will contain the `toValue` but not a `fromValue`. A `DELETE` difference is the other way around. An `EDIT` difference will have both fields.
                   * @enum {string}
                   */
                  operation: "ADD" | "DELETE" | "EDIT";
                  /** @description The new value of the settings field or record set. This may be any type of data, depending on the field that changed. The value will not exist on an `DELETE` difference. */
                  toValue?: boolean | number | Record<string, never> | string | null;
                  /** @description The type of the record set that changed. */
                  type: string;
                })[];
              /** @description A collection of settings fields that have changed between two versions. */
              settingsDiffs?: ({
                  /** @description The name of the settings value that changed. */
                  fieldName: string;
                  /** @description The prior value of the settings field or record set. This may be any type of data, depending on the field that changed. The value is not present for an `ADD` difference. */
                  fromValue?: boolean | number | Record<string, never> | string | null;
                  /**
                   * @description The type of difference. An `ADD` difference contains the `toValue` and a `DELETE` difference contains a `fromValue`. An `EDIT` difference contains both fields.
                   * @enum {string}
                   */
                  operation: "ADD" | "DELETE" | "EDIT";
                  /** @description The new value of the settings field or record set. This may be any type of data, depending on the field that changed. The value is not present for a `DELETE` difference. */
                  toValue?: boolean | number | Record<string, never> | string | null;
                })[];
            };
            /** @description Metadata about this diff report, describing the versions being diffed. */
            metadata: {
              /** @description The version ID of the base version. */
              fromVersionId: string;
              /**
               * Format: date-time
               * @description ISO 8601 timestamp indicating when the base version was last modified.
               */
              fromVersionLastModifiedDate: string;
              /** @description The version ID of the new version or change list. */
              toVersionId: string;
              /**
               * Format: date-time
               * @description ISO 8601 timestamp indicating when the new change list version was last modified.
               */
              toVersionLastModifiedDate: string;
            };
          };
        };
      };
    };
  };
  /**
   * Get master zone file
   * @description Download this zone's record set data in master zone file format. This operation applies to primary zones and secondary zones. See [RFC 1035](http://tools.ietf.org/html/rfc1035) section 5 and [RFC 1034](http://tools.ietf.org/html/rfc1034) section 3.6.1 for more information.  `AKAMAICDN` and `AKAMAITLC` records can't be represented in this format, so they are displayed as comment lines.
   */
  "get-zones-zone-zone-file": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "text/dns": string;
        };
      };
    };
  };
  /**
   * Post master zone file
   * @description Upload new record set data for this zone in master zone file format. Replaces any existing record sets. This operation applies to primary zones and secondary zones. See [RFC 1035](http://tools.ietf.org/html/rfc1035) section 5 and [RFC 1034](http://tools.ietf.org/html/rfc1034) section 3.6.1 for more information.  Zone files can contain only US-ASCII characters 0&ndash;127. Where allowed, you can encode high-order ASCII characters, 128+, with a backslash plus a three-digit decimal number representing the byte value. For example, `\233` instead of `&eacute;`.  `AKAMAICDN` and `AKAMAITLC` records can't be represented in this format. Uploading a zone file does not affect these records.
   */
  "post-zones-zone-zone-file": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The name of the zone.
         * @example {{zone}}
         */
        zone: string;
      };
    };
    requestBody: {
      content: {
        /** @example example.com.        10000    IN SOA ns1.akamaidns.com. webmaster.example.com. 1 28800 14400 2419200 86400 example.com.        10000    IN NS  ns1.akamaidns.com. example.com.        10000    IN NS  ns2.akamaidns.com. example.com.            300 IN  A   10.0.0.1 example.com.            300 IN  A   10.0.0.2 www.example.com.        300 IN  A   10.0.0.1 www.example.com.        300 IN  A   10.0.0.2 */
        "text/dns": string;
      };
    };
    responses: {
      /** @description Successful operation. */
      204: {
        content: {
          "*/*": unknown;
        };
      };
    };
  };
  /**
   * Submit bulk-create request
   * @description Submits a request to create one or more new Zones asynchronously. The request body contains a JSON array. Each object in the array contains the data necessary to create a zone. All zones are created on the same contract and group.  An offline task creates the new zones. You can use the response's `requestId` to check the task's status and view its results once it completes.
   */
  "post-zones-create-requests": {
    parameters: {
      query: {
        /**
         * @description The contract to use for the new zone.
         * @example {{contractId}}
         */
        contractId: string;
        /**
         * @description The currently selected group ID. This is a feature in the Pulsar UI where a user is able to specify a particular group to manage.
         * @example {{gid}}
         */
        gid: number;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "zones": [
         *     {
         *       "comment": "Adding bodies of water",
         *       "type": "SECONDARY",
         *       "zone": "river.com",
         *       "masters": [
         *         "192.0.2.63",
         *         "192.0.2.110"
         *       ]
         *     },
         *     {
         *       "comment": "Adding bodies of water",
         *       "type": "SECONDARY",
         *       "zone": "lake.com",
         *       "masters": [
         *         "192.0.2.18",
         *         "192.0.2.53"
         *       ]
         *     },
         *     {
         *       "comment": "Adding bodies of water",
         *       "type": "SECONDARY",
         *       "zone": "ocean.com",
         *       "masters": [
         *         "192.0.2.240",
         *         "192.0.2.204"
         *       ]
         *     }
         *   ]
         * }
         */
        "application/json": {
          /** @description An Edge DNS zone. This object contains zone settings, but not record sets. */
          zones: ({
              /** @description Free-form user comments. */
              comment?: string;
              /** @description Free-form user identifier for this zone, often used by resellers. */
              endCustomerId?: string;
              /** @description For `SECONDARY` zones only. The names or addresses of the customer's nameservers that the zone data should be retrieved from. */
              masters?: string[];
              /** @description For `PRIMARY` and `SECONDARY` zones only. Indicates whether DNSSEC Sign&Serve enabled. */
              signAndServe?: boolean;
              /**
               * @description The algorithm currently or last used for DNSSEC Sign&Serve. Absent if no algorithm has ever been assigned to this zone.
               * @enum {string}
               */
              signAndServeAlgorithm?: "RSA_SHA1" | "RSA_SHA256" | "RSA_SHA512" | "ECDSA_P256_SHA256" | "ECDSA_P384_SHA384";
              /** @description For `ALIAS` zones only. The name of the zone whose configuration this zone will copy. */
              target?: string;
              /** @description For `SECONDARY` zones only. The TSIG key used for zone transfers. */
              tsigKey?: {
                /** @enum {string} */
                algorithm: "HMAC-MD5.SIG-ALG.REG.INT" | "hmac-md5" | "hmac-sha1" | "hmac-sha224" | "hmac-sha256" | "hmac-sha384" | "hmac-sha512";
                name: string;
                secret: string;
                /** @description The number of zones that reference this key. */
                zonesCount?: number;
              };
              /**
               * @description The zone type. A `PRIMARY` zone's records are stored in the Akamai Portal. A `SECONDARY` zone's records are stored on the customer's nameservers. `ALIAS` zones allow users to duplicate the configuration of an existing zone.
               * @enum {string}
               */
              type: "PRIMARY" | "SECONDARY" | "ALIAS";
              /** @description The name of the zone. */
              zone: string;
            })[];
        };
      };
    };
    responses: {
      /** @description Resource successfully created. */
      201: {
        headers: {
          /** @description Provides a URL path you can GET the newly created resource from. */
          Location?: string;
        };
        content: {
          "application/json": {
            /**
             * Format: date-time
             * @description ISO 8601 timestamp, up to which you can query information about this request. After that point, information may be purged and no longer available.
             */
            expirationDate: string;
            /**
             * Format: uuid
             * @description The ID of the request.
             */
            requestId: string;
          };
        };
      };
    };
  };
  /**
   * Check bulk-create status
   * @description Retrieves the current status of a running or completed request. The `requestId` was returned when the create request was initiated.
   */
  "get-zones-create-requests-requestid": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The ID of the create request.
         * @example {{requestId}}
         */
        requestId: string;
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "application/json": {
            /** @description ISO 8601 timestamp, up to which you can query information about this request. After that point, information may be purged and no longer available. */
            expirationDate: string;
            /** @description The number of zones that could not be processed. */
            failureCount: number;
            /** @description If true, the offline task has finished processing and the result object can be retrieved. */
            isComplete: boolean;
            /**
             * Format: uuid
             * @description The ID of the request.
             */
            requestId: string;
            /** @description The number of zones that were successfully processed. */
            successCount: number;
            /** @description The number of zones that were included in the request. */
            zonesSubmitted: number;
          };
        };
      };
    };
  };
  /**
   * Get bulk-create result
   * @description Retrieves the results from a completed request.
   */
  "get-zones-create-requests-requestid-result": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The ID of the create request.
         * @example {{requestId}}
         */
        requestId: string;
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "application/json": {
            /** @description A list of zones that failed to be created. */
            failedZones?: ({
                /**
                 * @description A value describing why zone creation failed.
                 * @enum {string}
                 */
                failureReason: "ZONE_ALREADY_EXISTS" | "ZONE_TYPE_NOT_ALLOWED" | "ZONE_LIMIT_EXCEEDED" | "MALFORMED_ZONE" | "ALIAS_TARGET_NOT_PROPAGATED" | "SUBZONE_CHECK_FAILED" | "GTM_CONFLICT" | "INTERNAL_ERROR";
                /** @description The name of a zone that failed to be created. */
                zone: string;
              })[];
            /**
             * Format: uuid
             * @description The ID of the request.
             */
            requestId: string;
            /** @description The names of all zones that were successfully created. */
            successfullyCreatedZones?: string[];
          };
        };
      };
    };
  };
  /**
   * Submit bulk-delete request
   * @description Submits a request to delete one or more new Zones asynchronously. The request body contains a JSON array. Each element in the array is the name of a zone to be deleted.  Before deleting a zone from the Edge DNS system, the API makes sure Akamai servers aren't receiving DNS requests for that zone. It also checks that the zone is not currently delegated to Akamai's nameservers.  An offline task deletes the new zones. The result of this operation is a `requestId`, that you can use to check the task's status and view its results once it completes.
   */
  "post-zones-delete-requests": {
    parameters: {
      query?: {
        /**
         * @description If `true`, disables the delegation checks and deletes the zones as soon as possible.
         * @example {{bypassSafetyChecks}}
         */
        bypassSafetyChecks?: boolean;
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "zones": [
         *     "river.com",
         *     "stream.com"
         *   ]
         * }
         */
        "application/json": {
          /** @description A list of zone names. */
          zones: string[];
        };
      };
    };
    responses: {
      /** @description Successful operation. */
      201: {
        headers: {
          /** @description Provides a URL path you can GET the newly created resource from. */
          Location?: string;
        };
        content: {
          "application/json": {
            /**
             * Format: date-time
             * @description ISO 8601 timestamp, up to which you can query information about this request. After that point, information may be purged and no longer available.
             */
            expirationDate: string;
            /**
             * Format: uuid
             * @description The ID of the request.
             */
            requestId: string;
          };
        };
      };
    };
  };
  /**
   * Check bulk-delete status
   * @description Retrieves the current status of a running or completed request. The `requestId` was returned when the delete request was initiated.
   */
  "get-zones-delete-requests-requestid": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The ID of the delete request.
         * @example {{requestId}}
         */
        requestId: string;
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "application/json": {
            /** @description ISO 8601 timestamp, up to which you can query information about this request. After that point, information may be purged and no longer available. */
            expirationDate: string;
            /** @description The number of zones that could not be processed. */
            failureCount: number;
            /** @description If true, the offline task has finished processing and the result object can be retrieved. */
            isComplete: boolean;
            /**
             * Format: uuid
             * @description The ID of the request.
             */
            requestId: string;
            /** @description The number of zones that were successfully processed. */
            successCount: number;
            /** @description The number of zones that were included in the request. */
            zonesSubmitted: number;
          };
        };
      };
    };
  };
  /**
   * Get bulk-delete result
   * @description Retrieves the `results` from a completed request.
   */
  "get-zones-delete-requests-requestid-result": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
      path: {
        /**
         * @description The ID of the delete request.
         * @example {{requestId}}
         */
        requestId: string;
      };
    };
    responses: {
      /** @description Successful operation. */
      200: {
        content: {
          "application/json": {
            /** @description A list of zones that failed to be deleted. */
            failedZones?: {
                /** @description A value describing why zone deletion failed. */
                failureReason: string;
                /** @description The name of a zone that failed to be deleted. */
                zone: string;
              }[];
            /**
             * Format: uuid
             * @description The ID of the request.
             */
            requestId: string;
            /** @description The names of all zones that were successfully deleted. */
            successfullyDeletedZones?: string[];
          };
        };
      };
    };
  };
  /**
   * Get zones DNSSEC status
   * @description Returns the current DNSSEC status for one or more zones.
   */
  "post-zones-dns-sec-status": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "zones": [
         *     "river.com",
         *     "stream.com"
         *   ]
         * }
         */
        "application/json": {
          /** @description A list of zone names. */
          zones: string[];
        };
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description The list of statuses of the DNSSEC configuration for Edge DNS zones. */
            dnsSecStatuses: ({
                /** @description A list of zero or more existing problems with the current DNSSEC configuration. */
                alerts: ("INCOMPATIBLE_AUTHORITIES" | "NON_AKAMAI_AUTHORITIES" | "PARENT_DS_MISSING" | "OLD_DNSKEY" | "WRONG_DNSKEY")[];
                /** @description The currently active set of generated DNSSEC records. */
                currentRecords: {
                  /** @description The generated DNSKEY record for this zone. */
                  dnskeyRecord: string;
                  /** @description The generated DS record for this zone. */
                  dsRecord: string;
                  /** @description The TTL on the NS record for this zone. This should match the TTL on the DS or DNSKEY record. */
                  expectedTtl: number;
                  /**
                   * Format: date-time
                   * @description The ISO 8601 timestamp on which these records were generated.
                   */
                  lastModifiedDate: string;
                };
                /** @description The newly generated set of DNSSEC records, if one exists. */
                newRecords?: {
                  /** @description The generated DNSKEY record for this zone. */
                  dnskeyRecord: string;
                  /** @description The generated DS record for this zone. */
                  dsRecord: string;
                  /** @description The TTL on the NS record for this zone. This should match the TTL on the DS or DNSKEY record. */
                  expectedTtl: number;
                  /**
                   * Format: date-time
                   * @description The ISO 8601 timestamp on which these records were generated.
                   */
                  lastModifiedDate: string;
                };
                /** @description The name of the zone. */
                zone: string;
              })[];
          };
        };
      };
    };
  };
  /**
   * Get secondary zones transfer status
   * @description Returns the results of the most recent zone transfer attempts for one or more zones.  When you configure a `SECONDARY` zone, several Akamai nameservers known as zone transfer agents perform zone transfer requests to fetch the record data from the zone's configured master nameservers. The data returned by this operation describes the results of those zone transfers.
   */
  "post-zones-zone-transfer-status": {
    parameters: {
      query?: {
        /**
         * @description For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).
         * @example {{accountSwitchKey}}
         */
        accountSwitchKey?: string;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "zones": [
         *     "river.com",
         *     "stream.com"
         *   ]
         * }
         */
        "application/json": {
          /** @description A list of zone names. */
          zones: string[];
        };
      };
    };
    responses: {
      /** @description Successful response. */
      200: {
        content: {
          "application/json": {
            /** @description The list of statuses of any recent zone transfer attempts for Edge DNS secondary zones. */
            zones: ({
                /** @description A list of customer nameservers that were contacted. */
                masters: ({
                    /** @description The IP address of the customer nameserver. */
                    masterIP: string;
                    /** @description Akamai zone transfer agents that performed zone transfers. */
                    zoneTransferAgents: readonly ({
                        /** @description The zone transfer requests performed by the agent. */
                        actions: readonly ({
                            /**
                             * @description The type of action performed. `SOA` indicates that the agent tried to fetch the SOA record for this zone. `XFR` indicates that the agent attempted to perform a full zone transfer.
                             * @enum {string}
                             */
                            actionType: "SOA" | "XFR";
                            /**
                             * Format: date-time
                             * @description If present, the ISO 8601 timestamp indicating when the most recent failed action occurred.
                             */
                            lastFailureTimestamp?: string;
                            /** @description If present, the SOA serial of the zone file at the time of the most recent successful retrieval. */
                            lastSuccessSerial?: number;
                            /**
                             * Format: date-time
                             * @description If present, the ISO 8601 timestamp indicating when the most recent successful action occurred.
                             */
                            lastSuccessTimestamp?: string;
                            /** @description A list of error messages logged by the zone transfer agents. May contain messages from previous, that is not the most recent, actions. */
                            messages?: {
                                /** @description A short identifier for the problem. See the [Action message error code values](https://techdocs.akamai.com/edge-dns/reference/action-message-error-code-values) for values. */
                                errorCode: string;
                                /**
                                 * Format: date-time
                                 * @description The ISO 8601 timestamp indicating when the error occurred.
                                 */
                                timestamp?: string;
                                /** @description Additional information about the problem. If you need to decipher this data, see the [Action message error code values](https://techdocs.akamai.com/edge-dns/reference/action-message-error-code-values). */
                                tokens?: readonly string[];
                                [key: string]: unknown;
                              }[];
                          })[];
                        /** @description The IP address of the Akamai zone transfer agent. */
                        agentIP: string;
                        /**
                         * Format: date-time
                         * @description The ISO 8601 timestamp indicating the last time a zone transfer failed for this agent.
                         */
                        lastFailureTimestamp?: string;
                      })[];
                  })[];
                /** @description Information about the most recent successful and failed zone transfer attempt. */
                metadata: {
                  /**
                   * Format: date-time
                   * @description The ISO 8601 timestamp indicating when the most recent failed zone transfer occurred.
                   */
                  lastFailureTimestamp?: string;
                  /** @description The SOA serial number that was read during the most recent successful zone transfer. */
                  lastSuccessSerial?: number;
                  /**
                   * Format: date-time
                   * @description The ISO 8601 timestamp indicating when the most recent successful zone transfer occurred.
                   */
                  lastSuccessTimestamp?: string;
                };
                /** @description The name of the zone. */
                zone: string;
              })[];
          };
        };
      };
    };
  };
};
