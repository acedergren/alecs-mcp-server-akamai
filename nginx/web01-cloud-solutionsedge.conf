# NGINX configuration for ALECS MCP Server at web01.cloud.solutionsedge.io

upstream alecs_mcp_server {
    server 127.0.0.1:3000;
    keepalive 32;
}

upstream alecs_websocket_server {
    server 127.0.0.1:8082;
    keepalive 32;
}

server {
    listen 80;
    listen [::]:80;
    server_name web01.cloud.solutionsedge.io;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name web01.cloud.solutionsedge.io;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/web01.cloud.solutionsedge.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/web01.cloud.solutionsedge.io/privkey.pem;
    
    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logging
    access_log /var/log/nginx/alecs_mcp_access.log;
    error_log /var/log/nginx/alecs_mcp_error.log;

    # WebSocket MCP endpoint
    location /mcp {
        proxy_pass http://alecs_websocket_server;
        proxy_http_version 1.1;
        
        # WebSocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Forward Authorization header
        proxy_set_header Authorization $http_authorization;
        
        # WebSocket specific settings
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        
        # CORS headers for MCP clients
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Standard MCP API endpoint (stdio)
    location / {
        proxy_pass http://alecs_mcp_server;
        proxy_http_version 1.1;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # MCP specific settings
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://alecs_mcp_server/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }

    # Metrics endpoint (restricted)
    location /metrics {
        proxy_pass http://alecs_mcp_server/metrics;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        
        # Restrict access to monitoring systems
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
}